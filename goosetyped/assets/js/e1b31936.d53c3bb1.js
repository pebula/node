"use strict";(self.webpackChunkdocs_goosetyped=self.webpackChunkdocs_goosetyped||[]).push([[8377],{7196:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var s=t(6870),o=t(5569);const r={id:"discriminators",title:"Discriminators",sidebar_label:"3. Discriminators"},i="WIP",a={id:"advanced/discriminators",title:"Discriminators",description:"Creating Discriminators",source:"@site/docs/advanced/discriminators.md",sourceDirName:"advanced",slug:"/advanced/discriminators",permalink:"/node/goosetyped/docs/advanced/discriminators",draft:!1,unlisted:!1,editUrl:"https://github.com/pebula/node/tree/main/apps/docs/goosetyped/docs/docs/advanced/discriminators.md",tags:[],version:"current",frontMatter:{id:"discriminators",title:"Discriminators",sidebar_label:"3. Discriminators"},sidebar:"sidebar",previous:{title:"2. Middleware (Hooks)",permalink:"/node/goosetyped/docs/advanced/hooks"},next:{title:"4. Query Methods / Helpers",permalink:"/node/goosetyped/docs/advanced/query-methods"}},d={},c=[{value:"Creating Discriminators",id:"creating-discriminators",level:2},{value:"Discriminators as Sub Documents",id:"discriminators-as-sub-documents",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"wip",children:"WIP"}),"\n",(0,s.jsx)(n.h2,{id:"creating-discriminators",children:"Creating Discriminators"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"/* module: person.ts */\nimport { GtDocument, GtModel, GtColumn, GtDiscriminator } from '@pebula/goosetyped';\n\n@GtDocument()\nexport class Person<T extends string> extends GtModel() {\n\n  @GtColumn() name: string;\n\n  @GtColumn() age: number;\n\n  @GtDiscriminator()\n  type: T;\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { GtDocument, GtModel, GtColumn } from '@pebula/goosetyped';\nimport { Person } from './person';\n\n@GtDocument()\n\nexport class BusinessMan extends Person<'BusinessMan'> {\n   @GtColumn() businessTrips: number;\n}\n\n@GtDocument()\nexport class Soldier extends Person<'Soldier'> {\n   @GtColumn() releaseDate: Date;\n}\n\n@GtDocument()\nexport class Athlete extends Person<'Athlete'> {\n   @GtColumn() medals: number;\n}\n\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"Sub Documents are also valid discriminators."})}),"\n",(0,s.jsx)(n.h2,{id:"discriminators-as-sub-documents",children:"Discriminators as Sub Documents"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { GtDocument, GtModel, GtColumn } from '@pebula/goosetyped';\nimport { Person } from './person';\n\n@GtDocument()\nexport class SalesLead extends GtModel() {\n\n  @GtColumn() receivedAt: Date;\n\n  @GtColumn({ type: () => Person })\n  person: BusinessMan | Soldier | Athlete;\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { GtDocument, GtModel, GtColumn, DocumentArray } from '@pebula/goosetyped';\nimport { Person } from './person';\n\n@GtDocument()\nexport class Course extends GtModel() {\n\n  @GtColumn() name: string;\n\n  @GtColumn() startDate: Date;\n\n  @GtColumn({ type: () => Person })\n  students: DocumentArray<BusinessMan | Soldier | Athlete>;\n}\n"})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},5569:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(6326);const o={},r=s.createContext(o);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);