(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{277:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){d(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},d=Object.keys(e);for(r=0;r<d.length;r++)n=d[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(e);for(r=0;r<d.length;r++)n=d[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,d=e.originalType,a=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),s=p(n),u=r,m=s["".concat(a,".").concat(u)]||s[u]||b[u]||d;return n?o.a.createElement(m,c(c({ref:t},l),{},{components:n})):o.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var d=n.length,a=new Array(d);a[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var l=2;l<d;l++)a[l]=n[l];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},74:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return p}));var r=n(3),o=n(8),d=(n(0),n(277)),a={},c={unversionedId:"api-docs/goosetyped.model.findbyidanddelete",id:"api-docs/goosetyped.model.findbyidanddelete",isDocsHomePage:!1,title:"goosetyped.model.findbyidanddelete",description:"Home &gt; @pebula/goosetyped &gt; Model &gt; findByIdAndDelete",source:"@site/docs/api-docs/goosetyped.model.findbyidanddelete.md",slug:"/api-docs/goosetyped.model.findbyidanddelete",permalink:"/node/goosetyped/docs/api-docs/goosetyped.model.findbyidanddelete",editUrl:"https://github.com/pebula/node/tree/master/apps/docs/goosetyped/docs/docs/api-docs/goosetyped.model.findbyidanddelete.md",version:"current"},i=[{value:"Model.findByIdAndDelete() method",id:"modelfindbyidanddelete-method",children:[]},{value:"Parameters",id:"parameters",children:[]}],l={toc:i};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(d.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(d.b)("p",null,Object(d.b)("a",{parentName:"p",href:"/node/goosetyped/docs/api-docs/index"},"Home")," ",">"," ",Object(d.b)("a",{parentName:"p",href:"/node/goosetyped/docs/api-docs/goosetyped"},"@pebula/goosetyped")," ",">"," ",Object(d.b)("a",{parentName:"p",href:"/node/goosetyped/docs/api-docs/goosetyped.model"},"Model")," ",">"," ",Object(d.b)("a",{parentName:"p",href:"/node/goosetyped/docs/api-docs/goosetyped.model.findbyidanddelete"},"findByIdAndDelete")),Object(d.b)("h2",{id:"modelfindbyidanddelete-method"},"Model.findByIdAndDelete() method"),Object(d.b)("p",null,"Issue a mongodb findOneAndDelete command by a document's ","_","id field. findByIdAndDelete(id, ...) is equivalent to findByIdAndDelete(","{ ","_","id: id }",", ...). Finds a matching document, removes it, passing the found document (if any) to the callback. Executes immediately if callback is passed, else a Query object is returned."),Object(d.b)("p",null,"Note: same signatures as findByIdAndRemove"),Object(d.b)("b",null,"Signature:"),Object(d.b)("pre",null,Object(d.b)("code",{parentName:"pre",className:"language-typescript"},"findByIdAndDelete<T extends Document>(this: Ctor<T>): DocumentQuery<T | null, T, QueryHelpers> & QueryHelpers;\n")),Object(d.b)("h2",{id:"parameters"},"Parameters"),Object(d.b)("table",null,Object(d.b)("thead",{parentName:"table"},Object(d.b)("tr",{parentName:"thead"},Object(d.b)("th",{parentName:"tr",align:null},"Parameter"),Object(d.b)("th",{parentName:"tr",align:null},"Type"),Object(d.b)("th",{parentName:"tr",align:null},"Description"))),Object(d.b)("tbody",{parentName:"table"},Object(d.b)("tr",{parentName:"tbody"},Object(d.b)("td",{parentName:"tr",align:null},"this"),Object(d.b)("td",{parentName:"tr",align:null},Object(d.b)("a",{parentName:"td",href:"/node/goosetyped/docs/api-docs/goosetyped.ctor"},"Ctor"),"<","T",">"),Object(d.b)("td",{parentName:"tr",align:null})))),Object(d.b)("b",null,"Returns:"),Object(d.b)("p",null,"DocumentQuery","<","T ","|"," null, T, QueryHelpers",">"," ","&"," QueryHelpers"))}p.isMDXComponent=!0}}]);