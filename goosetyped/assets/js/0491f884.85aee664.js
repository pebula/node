(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{277:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return m}));var o=n(0),r=n.n(o);function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){d(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},d=Object.keys(e);for(o=0;o<d.length;o++)n=d[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(e);for(o=0;o<d.length;o++)n=d[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),s=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},l=function(e){var t=s(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,d=e.originalType,a=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),l=s(n),b=o,m=l["".concat(a,".").concat(b)]||l[b]||u[b]||d;return n?r.a.createElement(m,p(p({ref:t},c),{},{components:n})):r.a.createElement(m,p({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var d=n.length,a=new Array(d);a[0]=b;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var c=2;c<d;c++)a[c]=n[c];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},68:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return s}));var o=n(3),r=n(8),d=(n(0),n(277)),a={},p={unversionedId:"api-docs/goosetyped.model.findbyidandupdate",id:"api-docs/goosetyped.model.findbyidandupdate",isDocsHomePage:!1,title:"goosetyped.model.findbyidandupdate",description:"Home &gt; @pebula/goosetyped &gt; Model &gt; findByIdAndUpdate",source:"@site/docs/api-docs/goosetyped.model.findbyidandupdate.md",slug:"/api-docs/goosetyped.model.findbyidandupdate",permalink:"/node/goosetyped/docs/api-docs/goosetyped.model.findbyidandupdate",editUrl:"https://github.com/pebula/node/tree/master/apps/docs/goosetyped/docs/docs/api-docs/goosetyped.model.findbyidandupdate.md",version:"current"},i=[{value:"Model.findByIdAndUpdate() method",id:"modelfindbyidandupdate-method",children:[]},{value:"Parameters",id:"parameters",children:[]}],c={toc:i};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(d.b)("wrapper",Object(o.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(d.b)("p",null,Object(d.b)("a",{parentName:"p",href:"/node/goosetyped/docs/api-docs/index"},"Home")," ",">"," ",Object(d.b)("a",{parentName:"p",href:"/node/goosetyped/docs/api-docs/goosetyped"},"@pebula/goosetyped")," ",">"," ",Object(d.b)("a",{parentName:"p",href:"/node/goosetyped/docs/api-docs/goosetyped.model"},"Model")," ",">"," ",Object(d.b)("a",{parentName:"p",href:"/node/goosetyped/docs/api-docs/goosetyped.model.findbyidandupdate"},"findByIdAndUpdate")),Object(d.b)("h2",{id:"modelfindbyidandupdate-method"},"Model.findByIdAndUpdate() method"),Object(d.b)("p",null,"Issues a mongodb findAndModify update command by a document's ","_","id field. findByIdAndUpdate(id, ...) is equivalent to findOneAndUpdate(","{ ","_","id: id }",", ...)."),Object(d.b)("p",null,"If mongoose option 'useFindAndModify': set to false it uses native findOneAndUpdate() rather than deprecated findAndModify(). ",Object(d.b)("a",{parentName:"p",href:"https://mongoosejs.com/docs/api.html%5C#mongoose%5C_Mongoose-set"},"https://mongoosejs.com/docs/api.html\\#mongoose\\_Mongoose-set")),Object(d.b)("b",null,"Signature:"),Object(d.b)("pre",null,Object(d.b)("code",{parentName:"pre",className:"language-typescript"},"findByIdAndUpdate<T extends Document>(this: Ctor<T>): DocumentQuery<T | null, T, QueryHelpers> & QueryHelpers;\n")),Object(d.b)("h2",{id:"parameters"},"Parameters"),Object(d.b)("table",null,Object(d.b)("thead",{parentName:"table"},Object(d.b)("tr",{parentName:"thead"},Object(d.b)("th",{parentName:"tr",align:null},"Parameter"),Object(d.b)("th",{parentName:"tr",align:null},"Type"),Object(d.b)("th",{parentName:"tr",align:null},"Description"))),Object(d.b)("tbody",{parentName:"table"},Object(d.b)("tr",{parentName:"tbody"},Object(d.b)("td",{parentName:"tr",align:null},"this"),Object(d.b)("td",{parentName:"tr",align:null},Object(d.b)("a",{parentName:"td",href:"/node/goosetyped/docs/api-docs/goosetyped.ctor"},"Ctor"),"<","T",">"),Object(d.b)("td",{parentName:"tr",align:null})))),Object(d.b)("b",null,"Returns:"),Object(d.b)("p",null,"DocumentQuery","<","T ","|"," null, T, QueryHelpers",">"," ","&"," QueryHelpers"))}s.isMDXComponent=!0}}]);