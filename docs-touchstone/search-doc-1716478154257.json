{"searchDocs":[{"title":"touchstone.benchmarkoptions","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.benchmarkoptions","content":"","keywords":"","version":"Next"},{"title":"BenchmarkOptions interface​","type":1,"pageTitle":"touchstone.benchmarkoptions","url":"/node/docs-touchstone/docs/api-docs/touchstone.benchmarkoptions#benchmarkoptions-interface","content":" Signature:  export interface BenchmarkOptions   ","version":"Next","tagName":"h2"},{"title":"Properties​","type":1,"pageTitle":"touchstone.benchmarkoptions","url":"/node/docs-touchstone/docs/api-docs/touchstone.benchmarkoptions#properties","content":" Property Modifiers Type Description delay? number (Optional) The delay between test cycles (secs). initCount? number (Optional) The default number of times to execute a test on a benchmark’s first cycle. maxTime? number (Optional) The maximum time a benchmark is allowed to run before finishing (secs). minSamples? number (Optional) The minimum sample size required to perform statistical analysis. minTime? number (Optional) The time needed to reduce the percent uncertainty of measurement to 1% (secs). ","version":"Next","tagName":"h2"},{"title":"index","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/","content":"","keywords":"","version":"Next"},{"title":"API Reference​","type":1,"pageTitle":"index","url":"/node/docs-touchstone/docs/api-docs/#api-reference","content":" ","version":"Next","tagName":"h2"},{"title":"Packages​","type":1,"pageTitle":"index","url":"/node/docs-touchstone/docs/api-docs/#packages","content":" Package Description @pebula/touchstone  ","version":"Next","tagName":"h2"},{"title":"touchstone.benchmarkoptions.delay","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.benchmarkoptions.delay","content":"","keywords":"","version":"Next"},{"title":"BenchmarkOptions.delay property​","type":1,"pageTitle":"touchstone.benchmarkoptions.delay","url":"/node/docs-touchstone/docs/api-docs/touchstone.benchmarkoptions.delay#benchmarkoptionsdelay-property","content":" The delay between test cycles (secs).  Signature:  delay?: number;  ","version":"Next","tagName":"h2"},{"title":"touchstone.benchmarkoptions.maxtime","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.benchmarkoptions.maxtime","content":"","keywords":"","version":"Next"},{"title":"touchstone","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone","content":"","keywords":"","version":"Next"},{"title":"touchstone package​","type":1,"pageTitle":"touchstone","url":"/node/docs-touchstone/docs/api-docs/touchstone#touchstone-package","content":" ","version":"Next","tagName":"h2"},{"title":"Abstract Classes​","type":1,"pageTitle":"touchstone","url":"/node/docs-touchstone/docs/api-docs/touchstone#abstract-classes","content":" Abstract Class Description SimpleConsoleReporter   ","version":"Next","tagName":"h2"},{"title":"Functions​","type":1,"pageTitle":"touchstone","url":"/node/docs-touchstone/docs/api-docs/touchstone#functions","content":" Function Description Case(metadata) Mixin(m1, m2, m3, m4, m5, m6, mn) Mixin(mixins) Class mixin factory used for design-time and run-time. When using mixin, multiple classes can be used to compose a single class that is returned with the composed functionally but also with the composed design time type. Since JS does not support multi-inheritance we need to copy all the class members, both levels, static and instance. This means that: There is NO prototype chain! - Mixin constructors DOES NOT run. Loosing the prototype chain means we loose all of the reflected metadata (i.e. decorators) that exists on each mixin type including the proto-chain in each mixin type. To workaround this, we will also run special logic that manually aggregate the reflected metadata from all of the mixins and push it as reflected metadata of new class returned. This includes typescript design time metadata created when decorators are used and metadata produced by this library. If things overlap, the last mixin wins! The return class comes fresh and clean with NO prototype chain (other then Object) and with the aggregated functionality of all mixins. You can then use this class directly or extend it. class MyClass extends Mixin(Jump, Walk, Eat) { } Since MyClass extends the mixed in class directly it will not include it as part of the prototype chain hence all reflected metadata will propagate to MyClass. &gt; Note that full metadata reflection of mixins is possible only when they are decorated with decorated create by DecoratorDomain. If not, reflected metadata from properties (flat, no descriptors) is lost since we don't know the property names to query for. OnAbort() OnCaseComplete() OnComplete() OnError() OnReset() OnStart() OnTouchStoneEnd() OnTouchStoneStart() Suite(metadata) touchStone() TouchStone(metadata)   ","version":"Next","tagName":"h2"},{"title":"Interfaces​","type":1,"pageTitle":"touchstone","url":"/node/docs-touchstone/docs/api-docs/touchstone#interfaces","content":" Interface Description BenchmarkOptions CaseCompleteEvent CaseMetadataArgs CaseResult CaseStats An object of stats including mean, margin or error, and standard deviation. https://benchmarkjs.com/docs\\#prototype\\_stats SuiteAbortEvent SuiteCompleteEvent SuiteErrorEvent SuiteMetadataArgs SuiteResetEvent SuiteResult SuiteStartEvent TouchStoneEndEvent TouchStoneMetadataArgs TouchStoneRun TouchStoneStartEvent   ","version":"Next","tagName":"h2"},{"title":"Namespaces​","type":1,"pageTitle":"touchstone","url":"/node/docs-touchstone/docs/api-docs/touchstone#namespaces","content":" Namespace Description Mixin  ","version":"Next","tagName":"h2"},{"title":"BenchmarkOptions.maxTime property​","type":1,"pageTitle":"touchstone.benchmarkoptions.maxtime","url":"/node/docs-touchstone/docs/api-docs/touchstone.benchmarkoptions.maxtime#benchmarkoptionsmaxtime-property","content":" The maximum time a benchmark is allowed to run before finishing (secs).  Signature:  maxTime?: number;  ","version":"Next","tagName":"h2"},{"title":"touchstone.benchmarkoptions.initcount","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.benchmarkoptions.initcount","content":"","keywords":"","version":"Next"},{"title":"BenchmarkOptions.initCount property​","type":1,"pageTitle":"touchstone.benchmarkoptions.initcount","url":"/node/docs-touchstone/docs/api-docs/touchstone.benchmarkoptions.initcount#benchmarkoptionsinitcount-property","content":" The default number of times to execute a test on a benchmark’s first cycle.  Signature:  initCount?: number;  ","version":"Next","tagName":"h2"},{"title":"touchstone.case","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.case","content":"","keywords":"","version":"Next"},{"title":"Case() function​","type":1,"pageTitle":"touchstone.case","url":"/node/docs-touchstone/docs/api-docs/touchstone.case#case-function","content":" Signature:  Case: (metadata?: CaseMetadataArgs) =&gt; &lt;Z extends Partial&lt;Record&lt;K, (() =&gt; any) | ((...args: any) =&gt; any)&gt;&gt;, K extends string&gt;(target: Z, key: K, descriptor: TypedPropertyDescriptor&lt;(() =&gt; any) | ((...args: any) =&gt; any)&gt;) =&gt; void | TypedPropertyDescriptor&lt;(() =&gt; any) | ((...args: any) =&gt; any)&gt;   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"touchstone.case","url":"/node/docs-touchstone/docs/api-docs/touchstone.case#parameters","content":" Parameter Type Description metadata CaseMetadataArgs (Optional)  Returns:  &lt;Z extends Partial&lt;Record&lt;K, (() =&gt; any) | ((...args: any) =&gt; any)&gt;&gt;, K extends string&gt;(target: Z, key: K, descriptor: TypedPropertyDescriptor&lt;(() =&gt; any) | ((...args: any) =&gt; any)&gt;) =&gt; void | TypedPropertyDescriptor&lt;(() =&gt; any) | ((...args: any) =&gt; any)&gt; ","version":"Next","tagName":"h2"},{"title":"touchstone.casecompleteevent","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.casecompleteevent","content":"","keywords":"","version":"Next"},{"title":"CaseCompleteEvent interface​","type":1,"pageTitle":"touchstone.casecompleteevent","url":"/node/docs-touchstone/docs/api-docs/touchstone.casecompleteevent#casecompleteevent-interface","content":" Signature:  export interface CaseCompleteEvent extends BaseEvent&lt;'caseComplete'&gt;   Extends: BaseEvent&lt;'caseComplete'&gt;  ","version":"Next","tagName":"h2"},{"title":"Properties​","type":1,"pageTitle":"touchstone.casecompleteevent","url":"/node/docs-touchstone/docs/api-docs/touchstone.casecompleteevent#properties","content":" Property Modifiers Type Description caseResult CaseResult  ","version":"Next","tagName":"h2"},{"title":"touchstone.benchmarkoptions.minsamples","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.benchmarkoptions.minsamples","content":"","keywords":"","version":"Next"},{"title":"BenchmarkOptions.minSamples property​","type":1,"pageTitle":"touchstone.benchmarkoptions.minsamples","url":"/node/docs-touchstone/docs/api-docs/touchstone.benchmarkoptions.minsamples#benchmarkoptionsminsamples-property","content":" The minimum sample size required to perform statistical analysis.  Signature:  minSamples?: number;  ","version":"Next","tagName":"h2"},{"title":"touchstone.casecompleteevent.caseresult","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.casecompleteevent.caseresult","content":"","keywords":"","version":"Next"},{"title":"CaseCompleteEvent.caseResult property​","type":1,"pageTitle":"touchstone.casecompleteevent.caseresult","url":"/node/docs-touchstone/docs/api-docs/touchstone.casecompleteevent.caseresult#casecompleteeventcaseresult-property","content":" Signature:  caseResult: CaseResult;  ","version":"Next","tagName":"h2"},{"title":"touchstone.casemetadataargs","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.casemetadataargs","content":"","keywords":"","version":"Next"},{"title":"CaseMetadataArgs interface​","type":1,"pageTitle":"touchstone.casemetadataargs","url":"/node/docs-touchstone/docs/api-docs/touchstone.casemetadataargs#casemetadataargs-interface","content":" Signature:  export interface CaseMetadataArgs   ","version":"Next","tagName":"h2"},{"title":"Properties​","type":1,"pageTitle":"touchstone.casemetadataargs","url":"/node/docs-touchstone/docs/api-docs/touchstone.casemetadataargs#properties","content":" Property Modifiers Type Description benchmarkOptions? BenchmarkOptions (Optional) The default benchmark options for the Case. ## Options resolution process: For each Case select the options by merging the following objects (first one wins): Use options defined on the Case (WE ARE HERE) - Use options defined on the Suite - Use options defined for the entire run - Use the default options defined by the library (static) name? string (Optional) The name of the performance test. This is not mandatory, if not set the method name is used. variants? Array&lt;Required&lt;Omit&lt;CaseMetadataArgs, 'variants'&gt;&gt;&gt; (Optional) A list of variants that will run in the suite, each as a separate case. I.E. run the same method as a new case but with a different benchmark configuration set. &gt; Note that each variant must have a unique name across the entire suite and must not match the original name or any other variant name for this method and other methods within the Suite. &gt; Note that filters apply on each variant like it will on any regular case. ","version":"Next","tagName":"h2"},{"title":"touchstone.casemetadataargs.name","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.casemetadataargs.name","content":"","keywords":"","version":"Next"},{"title":"CaseMetadataArgs.name property​","type":1,"pageTitle":"touchstone.casemetadataargs.name","url":"/node/docs-touchstone/docs/api-docs/touchstone.casemetadataargs.name#casemetadataargsname-property","content":" The name of the performance test. This is not mandatory, if not set the method name is used.  Signature:  name?: string;  ","version":"Next","tagName":"h2"},{"title":"touchstone.benchmarkoptions.mintime","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.benchmarkoptions.mintime","content":"","keywords":"","version":"Next"},{"title":"BenchmarkOptions.minTime property​","type":1,"pageTitle":"touchstone.benchmarkoptions.mintime","url":"/node/docs-touchstone/docs/api-docs/touchstone.benchmarkoptions.mintime#benchmarkoptionsmintime-property","content":" The time needed to reduce the percent uncertainty of measurement to 1% (secs).  Signature:  minTime?: number;  ","version":"Next","tagName":"h2"},{"title":"touchstone.casemetadataargs.variants","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.casemetadataargs.variants","content":"","keywords":"","version":"Next"},{"title":"CaseMetadataArgs.variants property​","type":1,"pageTitle":"touchstone.casemetadataargs.variants","url":"/node/docs-touchstone/docs/api-docs/touchstone.casemetadataargs.variants#casemetadataargsvariants-property","content":" A list of variants that will run in the suite, each as a separate case. I.E. run the same method as a new case but with a different benchmark configuration set.  &gt; Note that each variant must have a unique name across the entire suite and must not match the original name or any other variant name for this method and other methods within the Suite.  &gt; Note that filters apply on each variant like it will on any regular case.  Signature:  variants?: Array&lt;Required&lt;Omit&lt;CaseMetadataArgs, 'variants'&gt;&gt;&gt;;  ","version":"Next","tagName":"h2"},{"title":"touchstone.casemetadataargs.benchmarkoptions","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.casemetadataargs.benchmarkoptions","content":"","keywords":"","version":"Next"},{"title":"CaseMetadataArgs.benchmarkOptions property​","type":1,"pageTitle":"touchstone.casemetadataargs.benchmarkoptions","url":"/node/docs-touchstone/docs/api-docs/touchstone.casemetadataargs.benchmarkoptions#casemetadataargsbenchmarkoptions-property","content":" The default benchmark options for the Case.  ## Options resolution process:  For each Case select the options by merging the following objects (first one wins):  Use options defined on the Case (WE ARE HERE) - Use options defined on the Suite - Use options defined for the entire run - Use the default options defined by the library (static)  Signature:  benchmarkOptions?: BenchmarkOptions;  ","version":"Next","tagName":"h2"},{"title":"touchstone.caseresult.hz","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult.hz","content":"","keywords":"","version":"Next"},{"title":"CaseResult.hz property​","type":1,"pageTitle":"touchstone.caseresult.hz","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult.hz#caseresulthz-property","content":" The number of executions per second. (Operations Per Second) https://benchmarkjs.com/docs\\#prototype\\_hz  Signature:  hz: number;  ","version":"Next","tagName":"h2"},{"title":"touchstone.caseresult.benchmarkoptions","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult.benchmarkoptions","content":"","keywords":"","version":"Next"},{"title":"CaseResult.benchmarkOptions property​","type":1,"pageTitle":"touchstone.caseresult.benchmarkoptions","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult.benchmarkoptions#caseresultbenchmarkoptions-property","content":" The benchmark options used to run this case.  Signature:  benchmarkOptions: BenchmarkOptions;  ","version":"Next","tagName":"h2"},{"title":"touchstone.caseresult","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult","content":"","keywords":"","version":"Next"},{"title":"CaseResult interface​","type":1,"pageTitle":"touchstone.caseresult","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult#caseresult-interface","content":" Signature:  export interface CaseResult   ","version":"Next","tagName":"h2"},{"title":"Properties​","type":1,"pageTitle":"touchstone.caseresult","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult#properties","content":" Property Modifiers Type Description benchmarkOptions BenchmarkOptions The benchmark options used to run this case. hz number The number of executions per second. (Operations Per Second) https://benchmarkjs.com/docs\\#prototype\\_hz hzDeviation number hzSamples number[] name string stats CaseStats An object of stats including mean, margin or error, and standard deviation. timing Times An object of timing data including cycle, elapsed, period, start, and stop. https://benchmarkjs.com/docs\\#prototype\\_times variantParent? string (Optional) Indicates (when truthy) if the current case is a variant case. If truthy, the actual value represents the name of the root case which it is a variant of. ","version":"Next","tagName":"h2"},{"title":"touchstone.caseresult.name","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult.name","content":"","keywords":"","version":"Next"},{"title":"CaseResult.name property​","type":1,"pageTitle":"touchstone.caseresult.name","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult.name#caseresultname-property","content":" Signature:  name: string;  ","version":"Next","tagName":"h2"},{"title":"touchstone.caseresult.stats","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult.stats","content":"","keywords":"","version":"Next"},{"title":"CaseResult.stats property​","type":1,"pageTitle":"touchstone.caseresult.stats","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult.stats#caseresultstats-property","content":" An object of stats including mean, margin or error, and standard deviation.  Signature:  stats: CaseStats;  ","version":"Next","tagName":"h2"},{"title":"touchstone.caseresult.hzsamples","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult.hzsamples","content":"","keywords":"","version":"Next"},{"title":"CaseResult.hzSamples property​","type":1,"pageTitle":"touchstone.caseresult.hzsamples","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult.hzsamples#caseresulthzsamples-property","content":" Signature:  hzSamples: number[];  ","version":"Next","tagName":"h2"},{"title":"touchstone.caseresult.variantparent","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult.variantparent","content":"","keywords":"","version":"Next"},{"title":"CaseResult.variantParent property​","type":1,"pageTitle":"touchstone.caseresult.variantparent","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult.variantparent#caseresultvariantparent-property","content":" Indicates (when truthy) if the current case is a variant case. If truthy, the actual value represents the name of the root case which it is a variant of.  Signature:  variantParent?: string;  ","version":"Next","tagName":"h2"},{"title":"touchstone.casestats.max","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.casestats.max","content":"","keywords":"","version":"Next"},{"title":"CaseStats.max property​","type":1,"pageTitle":"touchstone.casestats.max","url":"/node/docs-touchstone/docs/api-docs/touchstone.casestats.max#casestatsmax-property","content":" Signature:  max: number;  ","version":"Next","tagName":"h2"},{"title":"touchstone.caseresult.timing","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult.timing","content":"","keywords":"","version":"Next"},{"title":"CaseResult.timing property​","type":1,"pageTitle":"touchstone.caseresult.timing","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult.timing#caseresulttiming-property","content":" An object of timing data including cycle, elapsed, period, start, and stop. https://benchmarkjs.com/docs\\#prototype\\_times  Signature:  timing: Times;  ","version":"Next","tagName":"h2"},{"title":"touchstone.caseresult.hzdeviation","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult.hzdeviation","content":"","keywords":"","version":"Next"},{"title":"CaseResult.hzDeviation property​","type":1,"pageTitle":"touchstone.caseresult.hzdeviation","url":"/node/docs-touchstone/docs/api-docs/touchstone.caseresult.hzdeviation#caseresulthzdeviation-property","content":" Signature:  hzDeviation: number;  ","version":"Next","tagName":"h2"},{"title":"touchstone.casestats.median","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.casestats.median","content":"","keywords":"","version":"Next"},{"title":"CaseStats.median property​","type":1,"pageTitle":"touchstone.casestats.median","url":"/node/docs-touchstone/docs/api-docs/touchstone.casestats.median#casestatsmedian-property","content":" Signature:  median: number;  ","version":"Next","tagName":"h2"},{"title":"touchstone.casestats","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.casestats","content":"","keywords":"","version":"Next"},{"title":"CaseStats interface​","type":1,"pageTitle":"touchstone.casestats","url":"/node/docs-touchstone/docs/api-docs/touchstone.casestats#casestats-interface","content":" An object of stats including mean, margin or error, and standard deviation. https://benchmarkjs.com/docs\\#prototype\\_stats  Signature:  export interface CaseStats extends Stats   Extends: Stats  ","version":"Next","tagName":"h2"},{"title":"Properties​","type":1,"pageTitle":"touchstone.casestats","url":"/node/docs-touchstone/docs/api-docs/touchstone.casestats#properties","content":" Property Modifiers Type Description max number median number min number  ","version":"Next","tagName":"h2"},{"title":"touchstone.casestats.min","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.casestats.min","content":"","keywords":"","version":"Next"},{"title":"touchstone.mixin","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin","content":"","keywords":"","version":"Next"},{"title":"touchstone.mixin_1","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin_1","content":"","keywords":"","version":"Next"},{"title":"Mixin() function​","type":1,"pageTitle":"touchstone.mixin_1","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin_1#mixin-function","content":" Class mixin factory used for design-time and run-time.  When using mixin, multiple classes can be used to compose a single class that is returned with the composed functionally but also with the composed design time type.  Since JS does not support multi-inheritance we need to copy all the class members, both levels, static and instance. This means that:  There is NO prototype chain! - Mixin constructors DOES NOT run.  Loosing the prototype chain means we loose all of the reflected metadata (i.e. decorators) that exists on each mixin type including the proto-chain in each mixin type. To workaround this, we will also run special logic that manually aggregate the reflected metadata from all of the mixins and push it as reflected metadata of new class returned. This includes typescript design time metadata created when decorators are used and metadata produced by this library. If things overlap, the last mixin wins!  The return class comes fresh and clean with NO prototype chain (other then Object) and with the aggregated functionality of all mixins.  You can then use this class directly or extend it.  class MyClass extends Mixin(Jump, Walk, Eat) { }   Since MyClass extends the mixed in class directly it will not include it as part of the prototype chain hence all reflected metadata will propagate to MyClass.  &gt; Note that full metadata reflection of mixins is possible only when they are decorated with decorated create by DecoratorDomain. If not, reflected metadata from properties (flat, no descriptors) is lost since we don't know the property names to query for.  Signature:  export function Mixin&lt;T, S&gt;(...mixins: Array&lt;S &amp; Abstract&lt;T&gt;&gt;): Type&lt;T&gt; &amp; S { class __MixinClass { constructor(...args: any[]) { executeConstructors(__MixinClass, this, args); } } const constructors: Set&lt;(...args: any[]) =&gt; void&gt; = new Set(); MixinFw.mixIntoClass(__MixinClass, mixins, mixin =&gt; { handleConstructors(mixin, constructors); DecoratedDomain.extendDecoratorMetadata(mixin, __MixinClass); }) as any; if (constructors.size &gt; 0) { __MixinClass[mixedInClassesConstructors] = constructors; } return __MixinClass as any; }   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"touchstone.mixin_1","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin_1#parameters","content":" Parameter Type Description mixins Array&lt;S &amp; Abstract&lt;T&gt;&gt;   Returns:  Type&lt;T&gt; &amp; S ","version":"Next","tagName":"h2"},{"title":"CaseStats.min property​","type":1,"pageTitle":"touchstone.casestats.min","url":"/node/docs-touchstone/docs/api-docs/touchstone.casestats.min#casestatsmin-property","content":" Signature:  min: number;  ","version":"Next","tagName":"h2"},{"title":"touchstone.mixin.classhasmixin","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin.classhasmixin","content":"","keywords":"","version":"Next"},{"title":"Mixin.classHasMixin variable​","type":1,"pageTitle":"touchstone.mixin.classhasmixin","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin.classhasmixin#mixinclasshasmixin-variable","content":" Signature:  classHasMixin = MixinFw.classHasMixin  ","version":"Next","tagName":"h2"},{"title":"Mixin namespace​","type":1,"pageTitle":"touchstone.mixin","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin#mixin-namespace","content":" Signature:  export namespace Mixin   ","version":"Next","tagName":"h2"},{"title":"Functions​","type":1,"pageTitle":"touchstone.mixin","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin#functions","content":" Function Description Constructor(target, key, descriptor) A Decorator that marks a class instance method as a mixin constructor. The method will get invoked, with the context of the final target, when the final target is constructed and in the order the mixins are defined. The method will get the same parameters provided by the constructor.  ","version":"Next","tagName":"h2"},{"title":"Variables​","type":1,"pageTitle":"touchstone.mixin","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin#variables","content":" Variable Description classHasMixin hasMixin isMixinTarget MixinScope   ","version":"Next","tagName":"h2"},{"title":"Type Aliases​","type":1,"pageTitle":"touchstone.mixin","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin#type-aliases","content":" Type Alias Description classHasMixin hasMixin isMixinTarget MixedClassStatic MixinScope  ","version":"Next","tagName":"h2"},{"title":"touchstone.mixin.ismixintarget","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin.ismixintarget","content":"","keywords":"","version":"Next"},{"title":"Mixin.isMixinTarget variable​","type":1,"pageTitle":"touchstone.mixin.ismixintarget","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin.ismixintarget#mixinismixintarget-variable","content":" Signature:  isMixinTarget = MixinFw.isMixinTarget  ","version":"Next","tagName":"h2"},{"title":"touchstone.mixin.hasmixin","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin.hasmixin","content":"","keywords":"","version":"Next"},{"title":"Mixin.hasMixin variable​","type":1,"pageTitle":"touchstone.mixin.hasmixin","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin.hasmixin#mixinhasmixin-variable","content":" Signature:  hasMixin = MixinFw.hasMixin  ","version":"Next","tagName":"h2"},{"title":"touchstone.mixin.mixedclassstatic","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin.mixedclassstatic","content":"","keywords":"","version":"Next"},{"title":"Mixin.MixedClassStatic type​","type":1,"pageTitle":"touchstone.mixin.mixedclassstatic","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin.mixedclassstatic#mixinmixedclassstatic-type","content":" Signature:  export type MixedClassStatic = MixinFw.MixedClassStatic;  ","version":"Next","tagName":"h2"},{"title":"touchstone.oncasecomplete","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.oncasecomplete","content":"","keywords":"","version":"Next"},{"title":"OnCaseComplete() function​","type":1,"pageTitle":"touchstone.oncasecomplete","url":"/node/docs-touchstone/docs/api-docs/touchstone.oncasecomplete#oncasecomplete-function","content":" Signature:  OnCaseComplete: () =&gt; &lt;Z extends Partial&lt;Record&lt;K, (args_0: CaseCompleteEvent) =&gt; boolean | void&gt;&gt;, K extends string&gt;(target: Z, key: K, descriptor: TypedPropertyDescriptor&lt;(args_0: CaseCompleteEvent) =&gt; boolean | void&gt;) =&gt; void | TypedPropertyDescriptor&lt;(args_0: CaseCompleteEvent) =&gt; boolean | void&gt;   Returns:  &lt;Z extends Partial&lt;Record&lt;K, (args_0: CaseCompleteEvent) =&gt; boolean | void&gt;&gt;, K extends string&gt;(target: Z, key: K, descriptor: TypedPropertyDescriptor&lt;(args_0: CaseCompleteEvent) =&gt; boolean | void&gt;) =&gt; void | TypedPropertyDescriptor&lt;(args_0: CaseCompleteEvent) =&gt; boolean | void&gt; ","version":"Next","tagName":"h2"},{"title":"touchstone.onabort","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.onabort","content":"","keywords":"","version":"Next"},{"title":"OnAbort() function​","type":1,"pageTitle":"touchstone.onabort","url":"/node/docs-touchstone/docs/api-docs/touchstone.onabort#onabort-function","content":" Signature:  OnAbort: () =&gt; &lt;Z extends Partial&lt;Record&lt;K, (args_0: SuiteAbortEvent) =&gt; void&gt;&gt;, K extends string&gt;(target: Z, key: K, descriptor: TypedPropertyDescriptor&lt;(args_0: SuiteAbortEvent) =&gt; void&gt;) =&gt; void | TypedPropertyDescriptor&lt;(args_0: SuiteAbortEvent) =&gt; void&gt;   Returns:  &lt;Z extends Partial&lt;Record&lt;K, (args_0: SuiteAbortEvent) =&gt; void&gt;&gt;, K extends string&gt;(target: Z, key: K, descriptor: TypedPropertyDescriptor&lt;(args_0: SuiteAbortEvent) =&gt; void&gt;) =&gt; void | TypedPropertyDescriptor&lt;(args_0: SuiteAbortEvent) =&gt; void&gt; ","version":"Next","tagName":"h2"},{"title":"touchstone.mixin.mixinscope","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin.mixinscope","content":"","keywords":"","version":"Next"},{"title":"Mixin.MixinScope variable​","type":1,"pageTitle":"touchstone.mixin.mixinscope","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin.mixinscope#mixinmixinscope-variable","content":" Signature:  MixinScope = MixinFw.MixinScope  ","version":"Next","tagName":"h2"},{"title":"touchstone.onreset","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.onreset","content":"","keywords":"","version":"Next"},{"title":"OnReset() function​","type":1,"pageTitle":"touchstone.onreset","url":"/node/docs-touchstone/docs/api-docs/touchstone.onreset#onreset-function","content":" Signature:  OnReset: () =&gt; &lt;Z extends Partial&lt;Record&lt;K, (args_0: SuiteResetEvent) =&gt; void&gt;&gt;, K extends string&gt;(target: Z, key: K, descriptor: TypedPropertyDescriptor&lt;(args_0: SuiteResetEvent) =&gt; void&gt;) =&gt; void | TypedPropertyDescriptor&lt;(args_0: SuiteResetEvent) =&gt; void&gt;   Returns:  &lt;Z extends Partial&lt;Record&lt;K, (args_0: SuiteResetEvent) =&gt; void&gt;&gt;, K extends string&gt;(target: Z, key: K, descriptor: TypedPropertyDescriptor&lt;(args_0: SuiteResetEvent) =&gt; void&gt;) =&gt; void | TypedPropertyDescriptor&lt;(args_0: SuiteResetEvent) =&gt; void&gt; ","version":"Next","tagName":"h2"},{"title":"touchstone.mixin.constructor","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin.constructor","content":"","keywords":"","version":"Next"},{"title":"Mixin.Constructor() function​","type":1,"pageTitle":"touchstone.mixin.constructor","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin.constructor#mixinconstructor-function","content":" A Decorator that marks a class instance method as a mixin constructor. The method will get invoked, with the context of the final target, when the final target is constructed and in the order the mixins are defined. The method will get the same parameters provided by the constructor.  Signature:  Constructor: &lt;Z extends object&gt;(target: Z extends Function ? never : Z, key: string | symbol, descriptor: PropertyDescriptor) =&gt; PropertyDescriptor | void = (target: object, key: any, descriptor: PropertyDescriptor) =&gt; { Object.defineProperty(target.constructor, mixinCtorRef, { value: descriptor.value, configurable: false, enumerable: false, writable: false, }); }   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"touchstone.mixin.constructor","url":"/node/docs-touchstone/docs/api-docs/touchstone.mixin.constructor#parameters","content":" Parameter Type Description target Z extends Function ? never : Z key string | symbol descriptor PropertyDescriptor   Returns:  PropertyDescriptor | void ","version":"Next","tagName":"h2"},{"title":"touchstone.onerror","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.onerror","content":"","keywords":"","version":"Next"},{"title":"OnError() function​","type":1,"pageTitle":"touchstone.onerror","url":"/node/docs-touchstone/docs/api-docs/touchstone.onerror#onerror-function","content":" Signature:  OnError: () =&gt; &lt;Z extends Partial&lt;Record&lt;K, (args_0: SuiteErrorEvent) =&gt; void&gt;&gt;, K extends string&gt;(target: Z, key: K, descriptor: TypedPropertyDescriptor&lt;(args_0: SuiteErrorEvent) =&gt; void&gt;) =&gt; void | TypedPropertyDescriptor&lt;(args_0: SuiteErrorEvent) =&gt; void&gt;   Returns:  &lt;Z extends Partial&lt;Record&lt;K, (args_0: SuiteErrorEvent) =&gt; void&gt;&gt;, K extends string&gt;(target: Z, key: K, descriptor: TypedPropertyDescriptor&lt;(args_0: SuiteErrorEvent) =&gt; void&gt;) =&gt; void | TypedPropertyDescriptor&lt;(args_0: SuiteErrorEvent) =&gt; void&gt; ","version":"Next","tagName":"h2"},{"title":"touchstone.onstart","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.onstart","content":"","keywords":"","version":"Next"},{"title":"OnStart() function​","type":1,"pageTitle":"touchstone.onstart","url":"/node/docs-touchstone/docs/api-docs/touchstone.onstart#onstart-function","content":" Signature:  OnStart: () =&gt; &lt;Z extends Partial&lt;Record&lt;K, (args_0: SuiteStartEvent) =&gt; boolean | void&gt;&gt;, K extends string&gt;(target: Z, key: K, descriptor: TypedPropertyDescriptor&lt;(args_0: SuiteStartEvent) =&gt; boolean | void&gt;) =&gt; void | TypedPropertyDescriptor&lt;(args_0: SuiteStartEvent) =&gt; boolean | void&gt;   Returns:  &lt;Z extends Partial&lt;Record&lt;K, (args_0: SuiteStartEvent) =&gt; boolean | void&gt;&gt;, K extends string&gt;(target: Z, key: K, descriptor: TypedPropertyDescriptor&lt;(args_0: SuiteStartEvent) =&gt; boolean | void&gt;) =&gt; void | TypedPropertyDescriptor&lt;(args_0: SuiteStartEvent) =&gt; boolean | void&gt; ","version":"Next","tagName":"h2"},{"title":"touchstone.simpleconsolereporter","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.simpleconsolereporter","content":"","keywords":"","version":"Next"},{"title":"SimpleConsoleReporter class​","type":1,"pageTitle":"touchstone.simpleconsolereporter","url":"/node/docs-touchstone/docs/api-docs/touchstone.simpleconsolereporter#simpleconsolereporter-class","content":" Signature:  export declare abstract class SimpleConsoleReporter   ","version":"Next","tagName":"h2"},{"title":"Methods​","type":1,"pageTitle":"touchstone.simpleconsolereporter","url":"/node/docs-touchstone/docs/api-docs/touchstone.simpleconsolereporter#methods","content":" Method Modifiers Description onSimpleConsoleReporterComplete(event) onSimpleConsoleReporterCycle(event) onSimpleConsoleReporterError(event) onSimpleConsoleReporterFinalize(event) onSimpleConsoleReporterStart(event)  ","version":"Next","tagName":"h2"},{"title":"touchstone.oncomplete","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.oncomplete","content":"","keywords":"","version":"Next"},{"title":"OnComplete() function​","type":1,"pageTitle":"touchstone.oncomplete","url":"/node/docs-touchstone/docs/api-docs/touchstone.oncomplete#oncomplete-function","content":" Signature:  OnComplete: () =&gt; &lt;Z extends Partial&lt;Record&lt;K, (args_0: SuiteCompleteEvent) =&gt; boolean | void&gt;&gt;, K extends string&gt;(target: Z, key: K, descriptor: TypedPropertyDescriptor&lt;(args_0: SuiteCompleteEvent) =&gt; boolean | void&gt;) =&gt; void | TypedPropertyDescriptor&lt;(args_0: SuiteCompleteEvent) =&gt; boolean | void&gt;   Returns:  &lt;Z extends Partial&lt;Record&lt;K, (args_0: SuiteCompleteEvent) =&gt; boolean | void&gt;&gt;, K extends string&gt;(target: Z, key: K, descriptor: TypedPropertyDescriptor&lt;(args_0: SuiteCompleteEvent) =&gt; boolean | void&gt;) =&gt; void | TypedPropertyDescriptor&lt;(args_0: SuiteCompleteEvent) =&gt; boolean | void&gt; ","version":"Next","tagName":"h2"},{"title":"touchstone.ontouchstoneend","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.ontouchstoneend","content":"","keywords":"","version":"Next"},{"title":"OnTouchStoneEnd() function​","type":1,"pageTitle":"touchstone.ontouchstoneend","url":"/node/docs-touchstone/docs/api-docs/touchstone.ontouchstoneend#ontouchstoneend-function","content":" Signature:  OnTouchStoneEnd: () =&gt; &lt;Z extends Partial&lt;Record&lt;K, (args_0: TouchStoneEndEvent) =&gt; any&gt;&gt;, K extends string&gt;(target: Z, key: K, descriptor: TypedPropertyDescriptor&lt;(args_0: TouchStoneEndEvent) =&gt; any&gt;) =&gt; void | TypedPropertyDescriptor&lt;(args_0: TouchStoneEndEvent) =&gt; any&gt;   Returns:  &lt;Z extends Partial&lt;Record&lt;K, (args_0: TouchStoneEndEvent) =&gt; any&gt;&gt;, K extends string&gt;(target: Z, key: K, descriptor: TypedPropertyDescriptor&lt;(args_0: TouchStoneEndEvent) =&gt; any&gt;) =&gt; void | TypedPropertyDescriptor&lt;(args_0: TouchStoneEndEvent) =&gt; any&gt; ","version":"Next","tagName":"h2"},{"title":"touchstone.simpleconsolereporter.onsimpleconsolereportercomplete","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.simpleconsolereporter.onsimpleconsolereportercomplete","content":"","keywords":"","version":"Next"},{"title":"SimpleConsoleReporter.onSimpleConsoleReporterComplete() method​","type":1,"pageTitle":"touchstone.simpleconsolereporter.onsimpleconsolereportercomplete","url":"/node/docs-touchstone/docs/api-docs/touchstone.simpleconsolereporter.onsimpleconsolereportercomplete#simpleconsolereporteronsimpleconsolereportercomplete-method","content":" Signature:  onSimpleConsoleReporterComplete(event: SuiteCompleteEvent): void;   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"touchstone.simpleconsolereporter.onsimpleconsolereportercomplete","url":"/node/docs-touchstone/docs/api-docs/touchstone.simpleconsolereporter.onsimpleconsolereportercomplete#parameters","content":" Parameter Type Description event SuiteCompleteEvent   Returns:  void ","version":"Next","tagName":"h2"},{"title":"touchstone.ontouchstonestart","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.ontouchstonestart","content":"","keywords":"","version":"Next"},{"title":"OnTouchStoneStart() function​","type":1,"pageTitle":"touchstone.ontouchstonestart","url":"/node/docs-touchstone/docs/api-docs/touchstone.ontouchstonestart#ontouchstonestart-function","content":" Signature:  OnTouchStoneStart: () =&gt; &lt;Z extends Partial&lt;Record&lt;K, (args_0: TouchStoneStartEvent) =&gt; any&gt;&gt;, K extends string&gt;(target: Z, key: K, descriptor: TypedPropertyDescriptor&lt;(args_0: TouchStoneStartEvent) =&gt; any&gt;) =&gt; void | TypedPropertyDescriptor&lt;(args_0: TouchStoneStartEvent) =&gt; any&gt;   Returns:  &lt;Z extends Partial&lt;Record&lt;K, (args_0: TouchStoneStartEvent) =&gt; any&gt;&gt;, K extends string&gt;(target: Z, key: K, descriptor: TypedPropertyDescriptor&lt;(args_0: TouchStoneStartEvent) =&gt; any&gt;) =&gt; void | TypedPropertyDescriptor&lt;(args_0: TouchStoneStartEvent) =&gt; any&gt; ","version":"Next","tagName":"h2"},{"title":"touchstone.simpleconsolereporter.onsimpleconsolereportererror","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.simpleconsolereporter.onsimpleconsolereportererror","content":"","keywords":"","version":"Next"},{"title":"SimpleConsoleReporter.onSimpleConsoleReporterError() method​","type":1,"pageTitle":"touchstone.simpleconsolereporter.onsimpleconsolereportererror","url":"/node/docs-touchstone/docs/api-docs/touchstone.simpleconsolereporter.onsimpleconsolereportererror#simpleconsolereporteronsimpleconsolereportererror-method","content":" Signature:  onSimpleConsoleReporterError(event: SuiteErrorEvent): void;   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"touchstone.simpleconsolereporter.onsimpleconsolereportererror","url":"/node/docs-touchstone/docs/api-docs/touchstone.simpleconsolereporter.onsimpleconsolereportererror#parameters","content":" Parameter Type Description event SuiteErrorEvent   Returns:  void ","version":"Next","tagName":"h2"},{"title":"touchstone.simpleconsolereporter.onsimpleconsolereporterfinalize","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.simpleconsolereporter.onsimpleconsolereporterfinalize","content":"","keywords":"","version":"Next"},{"title":"SimpleConsoleReporter.onSimpleConsoleReporterFinalize() method​","type":1,"pageTitle":"touchstone.simpleconsolereporter.onsimpleconsolereporterfinalize","url":"/node/docs-touchstone/docs/api-docs/touchstone.simpleconsolereporter.onsimpleconsolereporterfinalize#simpleconsolereporteronsimpleconsolereporterfinalize-method","content":" Signature:  onSimpleConsoleReporterFinalize(event: TouchStoneEndEvent): void;   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"touchstone.simpleconsolereporter.onsimpleconsolereporterfinalize","url":"/node/docs-touchstone/docs/api-docs/touchstone.simpleconsolereporter.onsimpleconsolereporterfinalize#parameters","content":" Parameter Type Description event TouchStoneEndEvent   Returns:  void ","version":"Next","tagName":"h2"},{"title":"touchstone.simpleconsolereporter.onsimpleconsolereportercycle","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.simpleconsolereporter.onsimpleconsolereportercycle","content":"","keywords":"","version":"Next"},{"title":"SimpleConsoleReporter.onSimpleConsoleReporterCycle() method​","type":1,"pageTitle":"touchstone.simpleconsolereporter.onsimpleconsolereportercycle","url":"/node/docs-touchstone/docs/api-docs/touchstone.simpleconsolereporter.onsimpleconsolereportercycle#simpleconsolereporteronsimpleconsolereportercycle-method","content":" Signature:  onSimpleConsoleReporterCycle(event: CaseCompleteEvent): void;   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"touchstone.simpleconsolereporter.onsimpleconsolereportercycle","url":"/node/docs-touchstone/docs/api-docs/touchstone.simpleconsolereporter.onsimpleconsolereportercycle#parameters","content":" Parameter Type Description event CaseCompleteEvent   Returns:  void ","version":"Next","tagName":"h2"},{"title":"touchstone.suiteabortevent","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.suiteabortevent","content":"","keywords":"","version":"Next"},{"title":"touchstone.suite","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.suite","content":"","keywords":"","version":"Next"},{"title":"Suite() function​","type":1,"pageTitle":"touchstone.suite","url":"/node/docs-touchstone/docs/api-docs/touchstone.suite#suite-function","content":" Signature:  Suite: (metadata?: SuiteMetadataArgs) =&gt; ClassDecoratorOf&lt;any&gt;   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"touchstone.suite","url":"/node/docs-touchstone/docs/api-docs/touchstone.suite#parameters","content":" Parameter Type Description metadata SuiteMetadataArgs (Optional)  Returns:  ClassDecoratorOf&lt;any&gt; ","version":"Next","tagName":"h2"},{"title":"SuiteAbortEvent interface​","type":1,"pageTitle":"touchstone.suiteabortevent","url":"/node/docs-touchstone/docs/api-docs/touchstone.suiteabortevent#suiteabortevent-interface","content":" Signature:  export interface SuiteAbortEvent extends BaseEvent&lt;'abort'&gt;   Extends: BaseEvent&lt;'abort'&gt; ","version":"Next","tagName":"h2"},{"title":"touchstone.suitecompleteevent.result","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.suitecompleteevent.result","content":"","keywords":"","version":"Next"},{"title":"SuiteCompleteEvent.result property​","type":1,"pageTitle":"touchstone.suitecompleteevent.result","url":"/node/docs-touchstone/docs/api-docs/touchstone.suitecompleteevent.result#suitecompleteeventresult-property","content":" Signature:  result: CaseResult[];  ","version":"Next","tagName":"h2"},{"title":"touchstone.suiteerrorevent","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.suiteerrorevent","content":"","keywords":"","version":"Next"},{"title":"SuiteErrorEvent interface​","type":1,"pageTitle":"touchstone.suiteerrorevent","url":"/node/docs-touchstone/docs/api-docs/touchstone.suiteerrorevent#suiteerrorevent-interface","content":" Signature:  export interface SuiteErrorEvent extends BaseEvent&lt;'error'&gt;   Extends: BaseEvent&lt;'error'&gt;  ","version":"Next","tagName":"h2"},{"title":"Properties​","type":1,"pageTitle":"touchstone.suiteerrorevent","url":"/node/docs-touchstone/docs/api-docs/touchstone.suiteerrorevent#properties","content":" Property Modifiers Type Description error Error  ","version":"Next","tagName":"h2"},{"title":"touchstone.simpleconsolereporter.onsimpleconsolereporterstart","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.simpleconsolereporter.onsimpleconsolereporterstart","content":"","keywords":"","version":"Next"},{"title":"SimpleConsoleReporter.onSimpleConsoleReporterStart() method​","type":1,"pageTitle":"touchstone.simpleconsolereporter.onsimpleconsolereporterstart","url":"/node/docs-touchstone/docs/api-docs/touchstone.simpleconsolereporter.onsimpleconsolereporterstart#simpleconsolereporteronsimpleconsolereporterstart-method","content":" Signature:  onSimpleConsoleReporterStart(event: SuiteStartEvent): void;   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"touchstone.simpleconsolereporter.onsimpleconsolereporterstart","url":"/node/docs-touchstone/docs/api-docs/touchstone.simpleconsolereporter.onsimpleconsolereporterstart#parameters","content":" Parameter Type Description event SuiteStartEvent   Returns:  void ","version":"Next","tagName":"h2"},{"title":"touchstone.suiteerrorevent.error","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.suiteerrorevent.error","content":"","keywords":"","version":"Next"},{"title":"SuiteErrorEvent.error property​","type":1,"pageTitle":"touchstone.suiteerrorevent.error","url":"/node/docs-touchstone/docs/api-docs/touchstone.suiteerrorevent.error#suiteerroreventerror-property","content":" Signature:  error: Error;  ","version":"Next","tagName":"h2"},{"title":"touchstone.suitecompleteevent","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.suitecompleteevent","content":"","keywords":"","version":"Next"},{"title":"SuiteCompleteEvent interface​","type":1,"pageTitle":"touchstone.suitecompleteevent","url":"/node/docs-touchstone/docs/api-docs/touchstone.suitecompleteevent#suitecompleteevent-interface","content":" Signature:  export interface SuiteCompleteEvent extends BaseEvent&lt;'complete'&gt;   Extends: BaseEvent&lt;'complete'&gt;  ","version":"Next","tagName":"h2"},{"title":"Properties​","type":1,"pageTitle":"touchstone.suitecompleteevent","url":"/node/docs-touchstone/docs/api-docs/touchstone.suitecompleteevent#properties","content":" Property Modifiers Type Description result CaseResult[]  ","version":"Next","tagName":"h2"},{"title":"touchstone.suitemetadataargs.benchmarkoptions","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.suitemetadataargs.benchmarkoptions","content":"","keywords":"","version":"Next"},{"title":"SuiteMetadataArgs.benchmarkOptions property​","type":1,"pageTitle":"touchstone.suitemetadataargs.benchmarkoptions","url":"/node/docs-touchstone/docs/api-docs/touchstone.suitemetadataargs.benchmarkoptions#suitemetadataargsbenchmarkoptions-property","content":" The default benchmark options for the entire Suite.  ## Options resolution process:  For each Case select the options by merging the following objects (first one wins):  Use options defined on the Case - Use options defined on the Suite (WE ARE HERE) - Use options defined for the entire run - Use the default options defined by the library (static)  Signature:  benchmarkOptions?: BenchmarkOptions;  ","version":"Next","tagName":"h2"},{"title":"touchstone.suiteresetevent","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.suiteresetevent","content":"","keywords":"","version":"Next"},{"title":"SuiteResetEvent interface​","type":1,"pageTitle":"touchstone.suiteresetevent","url":"/node/docs-touchstone/docs/api-docs/touchstone.suiteresetevent#suiteresetevent-interface","content":" Signature:  export interface SuiteResetEvent extends BaseEvent&lt;'reset'&gt;   Extends: BaseEvent&lt;'reset'&gt; ","version":"Next","tagName":"h2"},{"title":"touchstone.suitemetadataargs.caseinvoketype","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.suitemetadataargs.caseinvoketype","content":"","keywords":"","version":"Next"},{"title":"SuiteMetadataArgs.caseInvokeType property​","type":1,"pageTitle":"touchstone.suitemetadataargs.caseinvoketype","url":"/node/docs-touchstone/docs/api-docs/touchstone.suitemetadataargs.caseinvoketype#suitemetadataargscaseinvoketype-property","content":" Define how cases in the suite are invoked.  function: Invoke like standalone function, no context (this) is set - method: Invoke as part of the class with the context (this). I.E: A new instance of the suite is created and used as the context for all cases.  Signature:  caseInvokeType?: 'method' | 'function';  ","version":"Next","tagName":"h2"},{"title":"touchstone.suiteresult","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.suiteresult","content":"","keywords":"","version":"Next"},{"title":"SuiteResult interface​","type":1,"pageTitle":"touchstone.suiteresult","url":"/node/docs-touchstone/docs/api-docs/touchstone.suiteresult#suiteresult-interface","content":" Signature:  export interface SuiteResult   ","version":"Next","tagName":"h2"},{"title":"Properties​","type":1,"pageTitle":"touchstone.suiteresult","url":"/node/docs-touchstone/docs/api-docs/touchstone.suiteresult#properties","content":" Property Modifiers Type Description cases CaseResult[] name string  ","version":"Next","tagName":"h2"},{"title":"touchstone.suitemetadataargs","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.suitemetadataargs","content":"","keywords":"","version":"Next"},{"title":"SuiteMetadataArgs interface​","type":1,"pageTitle":"touchstone.suitemetadataargs","url":"/node/docs-touchstone/docs/api-docs/touchstone.suitemetadataargs#suitemetadataargs-interface","content":" Signature:  export interface SuiteMetadataArgs   ","version":"Next","tagName":"h2"},{"title":"Properties​","type":1,"pageTitle":"touchstone.suitemetadataargs","url":"/node/docs-touchstone/docs/api-docs/touchstone.suitemetadataargs#properties","content":" Property Modifiers Type Description benchmarkOptions? BenchmarkOptions (Optional) The default benchmark options for the entire Suite. ## Options resolution process: For each Case select the options by merging the following objects (first one wins): Use options defined on the Case - Use options defined on the Suite (WE ARE HERE) - Use options defined for the entire run - Use the default options defined by the library (static) caseInvokeType? 'method' | 'function' (Optional) Define how cases in the suite are invoked. function: Invoke like standalone function, no context (this) is set - method: Invoke as part of the class with the context (this). I.E: A new instance of the suite is created and used as the context for all cases. name? string (Optional) The name of the suite. This is not mandatory, if not set the class name is used. ","version":"Next","tagName":"h2"},{"title":"touchstone.suiteresult.cases","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.suiteresult.cases","content":"","keywords":"","version":"Next"},{"title":"SuiteResult.cases property​","type":1,"pageTitle":"touchstone.suiteresult.cases","url":"/node/docs-touchstone/docs/api-docs/touchstone.suiteresult.cases#suiteresultcases-property","content":" Signature:  cases: CaseResult[];  ","version":"Next","tagName":"h2"},{"title":"touchstone.suiteresult.name","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.suiteresult.name","content":"","keywords":"","version":"Next"},{"title":"SuiteResult.name property​","type":1,"pageTitle":"touchstone.suiteresult.name","url":"/node/docs-touchstone/docs/api-docs/touchstone.suiteresult.name#suiteresultname-property","content":" Signature:  name: string;  ","version":"Next","tagName":"h2"},{"title":"touchstone.touchstoneendevent","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstoneendevent","content":"","keywords":"","version":"Next"},{"title":"TouchStoneEndEvent interface​","type":1,"pageTitle":"touchstone.touchstoneendevent","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstoneendevent#touchstoneendevent-interface","content":" Signature:  export interface TouchStoneEndEvent   ","version":"Next","tagName":"h2"},{"title":"Properties​","type":1,"pageTitle":"touchstone.touchstoneendevent","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstoneendevent#properties","content":" Property Modifiers Type Description results SuiteResult[] type 'touchStoneEnd'  ","version":"Next","tagName":"h2"},{"title":"touchstone.suitemetadataargs.name","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.suitemetadataargs.name","content":"","keywords":"","version":"Next"},{"title":"SuiteMetadataArgs.name property​","type":1,"pageTitle":"touchstone.suitemetadataargs.name","url":"/node/docs-touchstone/docs/api-docs/touchstone.suitemetadataargs.name#suitemetadataargsname-property","content":" The name of the suite. This is not mandatory, if not set the class name is used.  Signature:  name?: string;  ","version":"Next","tagName":"h2"},{"title":"touchstone.touchstoneendevent.results","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstoneendevent.results","content":"","keywords":"","version":"Next"},{"title":"touchstone.touchstone","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstone","content":"","keywords":"","version":"Next"},{"title":"TouchStone() function​","type":1,"pageTitle":"touchstone.touchstone","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstone#touchstone-function","content":" Signature:  TouchStone: (metadata?: TouchStoneMetadataArgs) =&gt; ClassDecoratorOf&lt;TouchStoneRun &amp; { [key: string]: any; }&gt;   ","version":"Next","tagName":"h2"},{"title":"Parameters​","type":1,"pageTitle":"touchstone.touchstone","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstone#parameters","content":" Parameter Type Description metadata TouchStoneMetadataArgs (Optional)  Returns:  ClassDecoratorOf&lt;TouchStoneRun &amp; { [key: string]: any; }&gt; ","version":"Next","tagName":"h2"},{"title":"TouchStoneEndEvent.results property​","type":1,"pageTitle":"touchstone.touchstoneendevent.results","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstoneendevent.results#touchstoneendeventresults-property","content":" Signature:  results: SuiteResult[];  ","version":"Next","tagName":"h2"},{"title":"touchstone.touchstonemetadataargs.manualrun","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonemetadataargs.manualrun","content":"","keywords":"","version":"Next"},{"title":"touchstone.suitestartevent","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.suitestartevent","content":"","keywords":"","version":"Next"},{"title":"SuiteStartEvent interface​","type":1,"pageTitle":"touchstone.suitestartevent","url":"/node/docs-touchstone/docs/api-docs/touchstone.suitestartevent#suitestartevent-interface","content":" Signature:  export interface SuiteStartEvent extends BaseEvent&lt;'start'&gt;   Extends: BaseEvent&lt;'start'&gt; ","version":"Next","tagName":"h2"},{"title":"touchstone.touchstoneendevent.type","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstoneendevent.type","content":"","keywords":"","version":"Next"},{"title":"TouchStoneEndEvent.type property​","type":1,"pageTitle":"touchstone.touchstoneendevent.type","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstoneendevent.type#touchstoneendeventtype-property","content":" Signature:  type: 'touchStoneEnd';  ","version":"Next","tagName":"h2"},{"title":"touchstone.touchstonemetadataargs","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonemetadataargs","content":"","keywords":"","version":"Next"},{"title":"TouchStoneMetadataArgs interface​","type":1,"pageTitle":"touchstone.touchstonemetadataargs","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonemetadataargs#touchstonemetadataargs-interface","content":" Signature:  export interface TouchStoneMetadataArgs   ","version":"Next","tagName":"h2"},{"title":"Properties​","type":1,"pageTitle":"touchstone.touchstonemetadataargs","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonemetadataargs#properties","content":" Property Modifiers Type Description manualRun? boolean (Optional) When true, will not run automatically, instead it will wait for manual execution. name? string (Optional) The name of the touchstone configuration. This is not mandatory, if not set the class name is used. You can ues this value to filter configurations. onAutoRunEnd? 'processExit' | 'ignore' | ((err?: Error) =&gt; void) (Optional) The action to when auto run (manualRun is not true) has finished. processExit: Exist the process - ignore: Do nothing - Function: Invoke a handler function processExist ","version":"Next","tagName":"h2"},{"title":"TouchStoneMetadataArgs.manualRun property​","type":1,"pageTitle":"touchstone.touchstonemetadataargs.manualrun","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonemetadataargs.manualrun#touchstonemetadataargsmanualrun-property","content":" When true, will not run automatically, instead it will wait for manual execution.  Signature:  manualRun?: boolean;  ","version":"Next","tagName":"h2"},{"title":"touchstone.touchstonemetadataargs.onautorunend","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonemetadataargs.onautorunend","content":"","keywords":"","version":"Next"},{"title":"touchstone.touchstonerun","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonerun","content":"","keywords":"","version":"Next"},{"title":"TouchStoneRun interface​","type":1,"pageTitle":"touchstone.touchstonerun","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonerun#touchstonerun-interface","content":" Signature:  export interface TouchStoneRun   ","version":"Next","tagName":"h2"},{"title":"Properties​","type":1,"pageTitle":"touchstone.touchstonerun","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonerun#properties","content":" Property Modifiers Type Description benchmarkOptions? BenchmarkOptions (Optional) The default benchmark options for the entire run. ## Options resolution process: For each Case select the options by merging the following objects (first one wins): Use options defined on the Case - Use options defined on the Suite - Use options defined for the entire run (WE ARE HERE) - Use the default options defined by the library (static) cases? string | string[] | RegExp | RegExp[] | ((name: string, suiteName: string) =&gt; boolean) (Optional) suites? string | string[] | RegExp | RegExp[] | ((name: string) =&gt; boolean) (Optional) ","version":"Next","tagName":"h2"},{"title":"touchstone.touchstonerun.benchmarkoptions","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonerun.benchmarkoptions","content":"","keywords":"","version":"Next"},{"title":"TouchStoneRun.benchmarkOptions property​","type":1,"pageTitle":"touchstone.touchstonerun.benchmarkoptions","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonerun.benchmarkoptions#touchstonerunbenchmarkoptions-property","content":" The default benchmark options for the entire run.  ## Options resolution process:  For each Case select the options by merging the following objects (first one wins):  Use options defined on the Case - Use options defined on the Suite - Use options defined for the entire run (WE ARE HERE) - Use the default options defined by the library (static)  Signature:  benchmarkOptions?: BenchmarkOptions;  ","version":"Next","tagName":"h2"},{"title":"touchstone.touchstonemetadataargs.name","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonemetadataargs.name","content":"","keywords":"","version":"Next"},{"title":"TouchStoneMetadataArgs.name property​","type":1,"pageTitle":"touchstone.touchstonemetadataargs.name","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonemetadataargs.name#touchstonemetadataargsname-property","content":" The name of the touchstone configuration. This is not mandatory, if not set the class name is used.  You can ues this value to filter configurations.  Signature:  name?: string;  ","version":"Next","tagName":"h2"},{"title":"TouchStoneMetadataArgs.onAutoRunEnd property​","type":1,"pageTitle":"touchstone.touchstonemetadataargs.onautorunend","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonemetadataargs.onautorunend#touchstonemetadataargsonautorunend-property","content":" The action to when auto run (manualRun is not true) has finished.  processExit: Exist the process - ignore: Do nothing - Function: Invoke a handler function  processExist  Signature:  onAutoRunEnd?: 'processExit' | 'ignore' | ((err?: Error) =&gt; void);  ","version":"Next","tagName":"h2"},{"title":"touchstone.touchstonerun.suites","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonerun.suites","content":"","keywords":"","version":"Next"},{"title":"TouchStoneRun.suites property​","type":1,"pageTitle":"touchstone.touchstonerun.suites","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonerun.suites#touchstonerunsuites-property","content":" Signature:  suites?: string | string[] | RegExp | RegExp[] | ((name: string) =&gt; boolean);  ","version":"Next","tagName":"h2"},{"title":"touchstone.touchstonerun.cases","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonerun.cases","content":"","keywords":"","version":"Next"},{"title":"TouchStoneRun.cases property​","type":1,"pageTitle":"touchstone.touchstonerun.cases","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonerun.cases#touchstoneruncases-property","content":" Signature:  cases?: string | string[] | RegExp | RegExp[] | ((name: string, suiteName: string) =&gt; boolean);  ","version":"Next","tagName":"h2"},{"title":"touchstone.touchstonestartevent","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonestartevent","content":"","keywords":"","version":"Next"},{"title":"TouchStoneStartEvent interface​","type":1,"pageTitle":"touchstone.touchstonestartevent","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonestartevent#touchstonestartevent-interface","content":" Signature:  export interface TouchStoneStartEvent   ","version":"Next","tagName":"h2"},{"title":"Properties​","type":1,"pageTitle":"touchstone.touchstonestartevent","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonestartevent#properties","content":" Property Modifiers Type Description type 'touchStoneStart'  ","version":"Next","tagName":"h2"},{"title":"Installation","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/getting-started/installation","content":"Installation To get started install the package: YarnNPM $ yarn add @pebula/touchstone ","keywords":"","version":"Next"},{"title":"touchstone.touchstonestartevent.type","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonestartevent.type","content":"","keywords":"","version":"Next"},{"title":"TouchStoneStartEvent.type property​","type":1,"pageTitle":"touchstone.touchstonestartevent.type","url":"/node/docs-touchstone/docs/api-docs/touchstone.touchstonestartevent.type#touchstonestarteventtype-property","content":" Signature:  type: 'touchStoneStart';  ","version":"Next","tagName":"h2"},{"title":"ChartJS HTML Reporter","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/reporters/chart-js-html-reporter","content":"","keywords":"","version":"Next"},{"title":"Configuration​","type":1,"pageTitle":"ChartJS HTML Reporter","url":"/node/docs-touchstone/docs/reporters/chart-js-html-reporter#configuration","content":" There is only one optional configuration available, which controls the HTML file output location.  The default output is set to &quot;benchmark-chart.html&quot;, which resolved to the current working directory and this filename.  To change the output path set the chartJsHtmlReporterOutputFile property on the mixin host to the path you would like to save the file to. If you set a relative path it will be relative to the current working directory (the folder which executed the process).  import { TouchStone } from '@pebula/touchstone'; import { ChartJsHtmlReporter } from '@pebula/touchstone/chart-js-html'; import './suites'; // make sure all suites are loaded @TouchStone() class MyPerformanceTest extends Mixin(ChartJsHtmlReporter) { chartJsHtmlReporterOutputFile = `./my-custom-path.html'; }    ","version":"Next","tagName":"h2"},{"title":"Basic Usage","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/getting-started/basic-example","content":"","keywords":"","version":"Next"},{"title":"Reports​","type":1,"pageTitle":"Basic Usage","url":"/node/docs-touchstone/docs/getting-started/basic-example#reports","content":" Reporters are used to output the statistics and result of the suite/s, case/s and other metadata collected in the benchmarking process.  Each report implements it's own output medium, let's add the default console reporter:  import { Suite, Case, SimpleConsoleReporter } from '@pebula/touchstone'; @Suite({ name: 'My First Benchmark Suite' }) class MyFirstBenchmarkSuite extends Mixin(SimpleConsoleReporter) { @Case({ name: 'my-first-benchmark' }) firstBenchmark() { /* Benchmarking... */ } @Case() async secondBenchmark() { // Will automatically detect that it's async. Name is taken from method name. /* Benchmarking... */ } }   Note that all we do here is extend our suite with the reporter class using the Mixin function.  tip A report can output to multiple mediums, it is up to the implementation of each reportYou can mixin multiple reports.  This is pretty simple and will work with multiple suite's as well. You can configure a different reporter for different suites but it is also harder to manage.  To help managing the suite, creating a shared configuration and automate execution use the suite container.  info A reporter is nothing but a class which hooks into life cycle events from the benchmarking process.  You can read more about reporters, starting from the reporters introduction ","version":"Next","tagName":"h2"},{"title":"Pretty Console Reporter","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/reporters/pretty-console-reporter","content":"Pretty Console Reporter The PrettyConsoleReporter is a modern CLI console reporter with colors, indentation, spinner and other nice things... Import\timport { PrettyConsoleReporter } from '@pebula/touchstone/reporters/pretty-console' Dependencies\tora, chalk Configuration\tNo import { TouchStone } from '@pebula/touchstone'; import { PrettyConsoleReporter } from '@pebula/touchstone/pretty-console'; import './suites'; // make sure all suites are loaded @TouchStone() class MyPerformanceTest extends Mixin(PrettyConsoleReporter) { } ","keywords":"","version":"Next"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/getting-started/introduction","content":"","keywords":"","version":"Next"},{"title":"Declarative Benchmarks​","type":1,"pageTitle":"Introduction","url":"/node/docs-touchstone/docs/getting-started/introduction#declarative-benchmarks","content":" With touchstone you define your benchmark like this:  import { Suite, Case } from '@pebula/touchstone'; @Suite({ name: 'My First Benchmark Suite' }) class MyFirstBenchmarkSuite { @Case({ name: 'my-first-benchmark' }) firstBenchmark() { /* Benchmarking... */ } @Case() async secondBenchmark() { // Will automatically detect that it's async. Name is taken from method name. /* Benchmarking... */ } }   ","version":"Next","tagName":"h2"},{"title":"Life Cycle Events​","type":1,"pageTitle":"Introduction","url":"/node/docs-touchstone/docs/getting-started/introduction#life-cycle-events","content":" All benchmark.js event are wrapped and delivered in a normalized manner:  @Suite() class TestSuite { @OnStart() start(event: SuiteStartEvent) { } @OnCaseComplete() caseComplete(event: CaseCompleteEvent) { } @OnComplete() complete(event: SuiteCompleteEvent) { } // @OnReset, @OnAbort, @OnError }   info There are additional, touchstone specific, events...  ","version":"Next","tagName":"h2"},{"title":"Composition & Re-use​","type":1,"pageTitle":"Introduction","url":"/node/docs-touchstone/docs/getting-started/introduction#composition--re-use","content":" touchstone is fully extensible through inheritance or composition (mixins):  import { Suite, Case, Mixin, VegaLiteReporter, SimpleConsoleReporter } from '@pebula/touchstone'; @Suite({ name: 'My First Benchmark Suite' }) class MyFirstBenchmarkSuite extends Mixin(SimpleConsoleReporter, VegaLiteReporter) { @Case({ name: 'my-first-benchmark' }) firstBenchmark() { /* Benchmarking... */ } }   In the example above we Mixin reporting behavior from 2 built-in reporters:  SimpleConsoleReporter - Will log progress to the consoleVegaLiteReporter - Will output HTML, SVG and PNG charts using vega-lite  ","version":"Next","tagName":"h2"},{"title":"TouchStone Events​","type":1,"pageTitle":"Introduction","url":"/node/docs-touchstone/docs/getting-started/introduction#touchstone-events","content":" There are 2 touchstone events:  @OnTouchStoneStart() - Fired with the TouchStoneStartEvent event context parameter@OnTouchStoneEnd() - Fired with the TouchStoneEndEvent event context parameter (which contains the SuiteResult[] property)  Both events can be registered on any suite.  ","version":"Next","tagName":"h2"},{"title":"Multiple Suites​","type":1,"pageTitle":"Introduction","url":"/node/docs-touchstone/docs/getting-started/introduction#multiple-suites","content":" You can declare multiple suite's, touchstone will execute them one after the other.  tip Because multiple suites can be used for a single run it might not make sense to register mixins on the suite. For suite events this might be ok but the touchstone start/end events will trigger multiple times, once for every suite. For this scenario, and in general, we recommend using a container to manage all mixins, configuration, etc... The container events will invoke once for all of the events in the system. (i.e. A case complete event, from any suite, will fire once on the container)  ","version":"Next","tagName":"h2"},{"title":"Vega Lite Reporter","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/reporters/vega-lite-reporter","content":"","keywords":"","version":"Next"},{"title":"Bar Legend​","type":1,"pageTitle":"Vega Lite Reporter","url":"/node/docs-touchstone/docs/reporters/vega-lite-reporter#bar-legend","content":" Each bar in the graph represents the operation per second (OPS) for each case (higher is better).  It is a ranged bar starting from the lowest OPS value measured and ending with the highest OPS value measured.  In between there are multiple indicators:  A black, dotted, ranged error ruler: representing the range of the standard deviation.A white point: representing the median valueA red point: representing the mean value (average)A plot of green lines: each line represents the OPS of a single case.    This will give you the information you need to analyze your benchmarks. ","version":"Next","tagName":"h2"},{"title":"Execute​","type":1,"pageTitle":"Introduction","url":"/node/docs-touchstone/docs/getting-started/introduction#execute","content":" To execute the suite/s and start benchmarking you need to invoke the touchStone() function.  import { Suite, Case, touchStone } from '@pebula/touchstone'; @Suite({ name: 'My First Benchmark Suite' }) class MyFirstBenchmarkSuite { @Case({ name: 'my-first-benchmark' }) firstBenchmark() { /* Benchmarking... */ } @Case() async secondBenchmark() { // Will automatically detect that it's async. Name is taken from method name. /* Benchmarking... */ } } await touchStone();   tip When using a touchstone configuration container you don't need to call touchStone(), the benchmark will automatically execute.  ","version":"Next","tagName":"h2"},{"title":"Simple Console Reporter","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/reporters/simple-console-reporter","content":"Simple Console Reporter The SimpleConsoleReporter is a simple CLI console reporter that display the default benchmark.js case result statistics. Import\timport { SimpleConsoleReporter } from '@pebula/touchstone' Dependencies\tNone Configuration\tNo","keywords":"","version":"Next"},{"title":"Demo​","type":1,"pageTitle":"Introduction","url":"/node/docs-touchstone/docs/getting-started/introduction#demo","content":" The following is the output of the a demo benchmark application: benchmark-chart ","version":"Next","tagName":"h2"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/reporters/introduction","content":"","keywords":"","version":"Next"},{"title":"Using a reporter​","type":1,"pageTitle":"Introduction","url":"/node/docs-touchstone/docs/reporters/introduction#using-a-reporter","content":" To use a reporter just mix it into a suite/container and it will just work.  import { TouchStone, SimpleConsoleReporter } from '@pebula/touchstone'; import './suites'; // make sure all suites are loaded @TouchStone() class MyPerformanceTest extends Mixin(SimpleConsoleReporter) { benchmarkOptions = { delay: 0.5, initCount: 5, }; }   info Note that some reporter are configurable (optional or required). This is done through properties or methods provided on the mixin host. See the documentation for each reporter for details.  ","version":"Next","tagName":"h2"},{"title":"External Built-In reporters​","type":1,"pageTitle":"Introduction","url":"/node/docs-touchstone/docs/reporters/introduction#external-built-in-reporters","content":" An external built-int reporter is a reporter which is available when you install the @pebula/touchstone module but not as part of the core module. I.E. You can't import it from @pebula/touchstone directly.  For example, to use PrettyConsoleReporter import it from @pebula/touchstone/reporters/pretty-console.  Some external reporters require dependencies and some not, see the documentation for each one to better understand each reporter and the requirements for it.  warning If an external built-in reporter require dependencies you must install them. The dependencies of all external built-in reporters are part of the peerDependencies list of the core module.  ","version":"Next","tagName":"h2"},{"title":"Customizing your own reporter​","type":1,"pageTitle":"Introduction","url":"/node/docs-touchstone/docs/reporters/introduction#customizing-your-own-reporter","content":" It is easy to customize your own reporter. In fact, all reports are &quot;customized&quot; using the same customization format.  A reporter is nothing but a class hooked into life-cycle events  Here's the gist of it:  import { OnStart, OnCaseComplete, OnComplete, OnTouchStoneStart, OnTouchStoneEnd, OnError, SuiteStartEvent, CaseCompleteEvent, SuiteErrorEvent, SuiteCompleteEvent, TouchStoneStartEvent, TouchStoneEndEvent } from '@pebula/touchstone'; export abstract class SimpleConsoleReporter { @OnTouchStoneStart() // Do something when we start benchmarking onSimpleConsoleReporterInitialize(event: TouchStoneStartEvent) { } @OnStart() // Do something when we start benchmarking a new suite onSimpleConsoleReporterStart(event: SuiteStartEvent) { } @OnCaseComplete() // Do something when we end benchmarking a case onSimpleConsoleReporterCycle(event: CaseCompleteEvent) { } @OnError() // Do something when there is an error while benchmarking onSimpleConsoleReporterError(event: SuiteErrorEvent) { } @OnComplete() // Do something when we end benchmarking a suite onSimpleConsoleReporterComplete(event: SuiteCompleteEvent) { } @OnTouchStoneEnd() // Do something when all suites are benchmarked and we're about to end the process onSimpleConsoleReporterFinalize(event: TouchStoneEndEvent) { } }   Note that not all events we're used in the above template ","version":"Next","tagName":"h2"},{"title":"Suites & Cases","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/using-touchstone/suites-and-cases","content":"Suites &amp; Cases TBD...","keywords":"","version":"Next"},{"title":"Suite Container","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/using-touchstone/suite-container","content":"","keywords":"","version":"Next"},{"title":"Benchmark options​","type":1,"pageTitle":"Suite Container","url":"/node/docs-touchstone/docs/using-touchstone/suite-container#benchmark-options","content":" We can define the default benchmark options (benchmarkOptions) which will apply to all suites and cases.  tip You can define the benchmarkOptions per Suite and/or per Case, at each level the options from the parent level are cloned and the new options are merged into them (overridden).  info Note that the container MyPerformanceTest get instantiated and the instance is used as the context (this) for all life cycle events by default. This is also true for classes decorated with Suite, i.e. life cycle events defined on the Suite share a context (this).  warning By default, @Case() methods are NOT invoked with a context, even though they are class members. This is done to prevent any impact on the benchmark results. If you wish to provide the suite's instance to the case method, same as done for life cycle methods you need to set the caseInvokeType property in the @Suite() metadata argument parameter. @Suite({ caseInvokeType: 'method' }) class MyCase { private myProp: number; @OnStart() start() { this.myProp = 99; // can also be done in the constructor } @Case() validate() { const oneHundred = this.myProp + 1; // oneHundred -&gt; 100 } } It is recommended to initialize suite's in the @OnStart life cycle event and not in the constructor. This way you will never define a constructor in a mixin class, which in the case of mixins never run!  ","version":"Next","tagName":"h2"},{"title":"Manual Run​","type":1,"pageTitle":"Suite Container","url":"/node/docs-touchstone/docs/using-touchstone/suite-container#manual-run","content":" You can disable the automatic benchmark execution by enabling manual run:   @TouchStone({ manualRun: true }) class MyPerformanceTest extends Mixin(SimpleConsoleReporter) { }  ","version":"Next","tagName":"h2"},{"title":"Events","type":0,"sectionRef":"#","url":"/node/docs-touchstone/docs/using-touchstone/events","content":"","keywords":"","version":"Next"},{"title":"Naming event methods​","type":1,"pageTitle":"Events","url":"/node/docs-touchstone/docs/using-touchstone/events#naming-event-methods","content":" Since most classes in touchstone are destined to be mixed in to a main container class, it is best to set unique names to your decorated methods.  This is true to all events but for decorated Case methods as well.  This will prevent type conflicts when mixing them all into a single class. ","version":"Next","tagName":"h2"}],"options":{"id":"default"}}