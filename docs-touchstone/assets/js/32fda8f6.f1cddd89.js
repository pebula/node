"use strict";(self.webpackChunknode=self.webpackChunknode||[]).push([[769],{3726:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>a,default:()=>d,frontMatter:()=>i,toc:()=>c});var s=t(4848),o=t(8453),r=t(6640);const i={id:"mixins",title:"Mixins",sidebar_label:"4. Mixins"},a=void 0,c=[];function l(e){const n={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Mixins are the perfect tools to apply functionality and are very similar to mongoose plugins."}),"\n",(0,s.jsxs)(n.p,{children:["Let's say we want to add ",(0,s.jsx)(n.code,{children:"createDate"})," and ",(0,s.jsx)(n.code,{children:"updateDate"})," columns to our ",(0,s.jsx)(n.code,{children:"Customer"})," model:"]}),"\n",(0,s.jsxs)(n.p,{children:["The straight-forward approach would ne to use the ",(0,s.jsx)(n.code,{children:"@GtTimestampCreated"})," & ",(0,s.jsx)(n.code,{children:"@GtTimestampUpdated"})," decorators in the class:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { GtDocument, GtModel, GtTimestampCreated, GtTimestampUpdated } from '@pebula/goosetyped';\n\n@GtDocument()\nexport class Customer extends GtModel() {\n  @GtColumn()\n  name: string;\n\n  @GtColumn()\n  age: number;\n\n  @GtTimestampCreated()\n  createDate: Date;\n\n  @GtTimestampUpdated()\n  updateDate: Date;\n}\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"@GtTimestampCreated"})," & ",(0,s.jsx)(n.code,{children:"@GtTimestampUpdated"})," are utility decorators that expose mongoose's built-in ",(0,s.jsx)(r.pX,{type:"schema",hash:"timestamps",children:"timestamps"})]})}),"\n",(0,s.jsx)(n.p,{children:"This is ok but we most probably want to add this capability to other models in our application but not all of them.\nWe can use inheritance but this will limit our possibility of composing capabilities together..."}),"\n",(0,s.jsx)(n.p,{children:"Instead, we define a class (does not have to be a document or sub-document...) with the capability we want:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export class TimestampMixin {\n  @GtTimestampCreated()\n  createDate: Date;\n\n  @GtTimestampUpdated()\n  updateDate: Date;\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now we can mix it into our models where needed:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"@GtDocument()\nexport class Customer extends GtModel(TimestampMixin) {\n  @GtColumn()\n  name: string;\n\n  @GtColumn()\n  age: number;\n  updateDate: Date;\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Ohh, we forgot, the ",(0,s.jsx)(n.code,{children:"Customer"})," model also needs an ",(0,s.jsx)(n.code,{children:"Owner"})," mixin:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export class OwnerMixin {\n  @GtColumn()\n  owner: string;\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now we can mix it into our models where needed:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"@GtDocument()\nexport class Customer extends GtModel(TimestampMixin, OwnerMixin) {\n  @GtColumn()\n  name: string;\n\n  @GtColumn()\n  age: number;\n  updateDate: Date;\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},6640:(e,n,t)=>{t.d(n,{ol:()=>c,z7:()=>p,jd:()=>h,pX:()=>x});var s=t(6540),o=t(6025),r=t(4586),i=t(8774),a=t(4848);function c(e){var n=(0,r.A)(),t=e.symbol;return(0,a.jsx)(i.A,{to:(0,o.A)(""+n.siteConfig.customFields.apiDocPrefix+t.toLowerCase()),children:e.children||t})}var l=t(5293),d=t(1765);const m={plain:{color:"#f8f8f2",backgroundColor:"#272822"},styles:[{types:["comment"],style:{color:"rgb(136, 132, 111)"}},{types:["string","changed"],style:{color:"rgb(230, 219, 116)"}},{types:["punctuation","tag","deleted"],style:{color:"rgb(249, 38, 114)"}},{types:["number","builtin"],style:{color:"rgb(174, 129, 255)"}},{types:["variable"],style:{color:"rgb(248, 248, 242)"}},{types:["function","attr-name","inserted"],style:{color:"rgb(166, 226, 46)"}}]},u={codeSnippet:"codeSnippet_KFiO"};function p(e){var n=(0,r.A)().siteConfig.themeConfig.prism||{},t=(0,s.useState)(!1),o=(t[0],t[1]);(0,s.useEffect)((function(){o(!0)}),[]);var i=(0,l.G)().isDarkTheme,c=n.theme||m,p=n.darkTheme||c,h=i?p:c,x=e.lang,g=void 0===x?"yaml":x,f=e.snippet;return(0,a.jsx)(d.f4,{theme:h,code:f,language:g,children:function(e){var n=e.className,t=e.style,s=e.tokens,o=e.getLineProps,r=e.getTokenProps;return(0,a.jsx)("pre",{className:n+" "+u.codeSnippet,style:t,children:s.map((function(e,n){return(0,a.jsx)("div",Object.assign({},o({line:e,key:n}),{children:e.map((function(e,n){return(0,a.jsx)("span",Object.assign({},r({token:e,key:n})))}))}))}))})}})}function h(e){var n=e.to;return(0,a.jsx)(i.A,{to:(0,o.A)(n),children:e.children})}function x(e){var n=(0,r.A)(),t=e.type,s=e.hash,o=e.display,i=n.siteConfig.customFields.mongooseDocsUrl+"/"+function(e){switch(e){case"schema":return"guide";case"schemaType":return"SchemaTypes";case"connection":return"Connections";case"model":return"Models";case"document":return"Documents";case"subDocument":return"subdocs";case"query":return"Queries";case"validation":return"Validation";case"middleware":return"Middleware";case"populate":return"Populate";case"discriminator":return"Discriminators";case"plugins":return"Plugins"}throw new Error("Unknown link segment type "+e)}(t).toLowerCase()+".html"+(s?"#"+s:"");return(0,a.jsx)("a",{href:i,target:"_blank",children:e.children||o||s||""})}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(6540);const o={},r=s.createContext(o);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);