"use strict";(self.webpackChunkdocs_decorate=self.webpackChunkdocs_decorate||[]).push([[373],{5202:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var a=n(6870),r=n(5569),i=n(1740),o=n(2121);n(3634);const s={id:"composing-decorator-api-class",title:"Decorator API Class Mixins",sidebar_label:"4. Decorator API Class Mixins"},l=void 0,c={id:"decorate-fluent/composing-decorator-api-class",title:"Decorator API Class Mixins",description:"In the previous page we create one big decorator API class with all of our plugins inside.",source:"@site/docs/decorate-fluent/composing-decorator-api-class.md",sourceDirName:"decorate-fluent",slug:"/decorate-fluent/composing-decorator-api-class",permalink:"/node/decorate/docs/decorate-fluent/composing-decorator-api-class",draft:!1,unlisted:!1,editUrl:"https://github.com/pebula/node/tree/main/apps/docs/decorate/docs/docs/decorate-fluent/composing-decorator-api-class.md",tags:[],version:"current",frontMatter:{id:"composing-decorator-api-class",title:"Decorator API Class Mixins",sidebar_label:"4. Decorator API Class Mixins"},sidebar:"sidebar",previous:{title:"3. Decorator API Class",permalink:"/node/decorate/docs/decorate-fluent/decorator-api-class"},next:{title:"5. Real Life Example",permalink:"/node/decorate/docs/decorate-fluent/example"}},u={},d=[{value:"Mixins",id:"mixins",level:2},{value:"Decorator API Composition",id:"decorator-api-composition",level:2}];function h(e){const t={admonition:"admonition",br:"br",code:"code",em:"em",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["In the previous page we create one big decorator API class with all of our plugins inside.",(0,a.jsx)(t.br,{}),"\n","This is not extensible enough, we want to be able to populate our API with predefined plugins which we can share, install etc..."]}),"\n",(0,a.jsx)(t.p,{children:"This is exactly what the library is designed for!"}),"\n",(0,a.jsx)(t.h2,{id:"mixins",children:"Mixins"}),"\n",(0,a.jsx)(t.p,{children:"A Mixin is small encapsulated logical container which implement a specific behavior which can be mixed into another class."}),"\n",(0,a.jsxs)(t.p,{children:["With mixins we want to be able to write plugins in small, encapsulated and reuseable classes or better yet download them as a ",(0,a.jsx)(t.code,{children:"node_module"})," package"]}),"\n",(0,a.jsxs)(t.p,{children:["We then import them and mix them onto our main ",(0,a.jsx)(t.strong,{children:"Fluent Decorator API"})," class adding their behavior to our API."]}),"\n",(0,a.jsxs)(t.admonition,{title:"Mixin 101",type:"info",children:[(0,a.jsxs)(t.p,{children:["JavaScript does not allow multiple inheritance, a class may only extend from a single class.",(0,a.jsx)(t.br,{}),"\n","To workaround this limitation we use Mixins."]}),(0,a.jsx)(t.p,{children:"Mixins are classes which are not extends but merged into a host class extending their functionality (methods, accessors) onto the host.\nSimply put, copying all of the property descriptors (static and prototype) onto the host class."}),(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"There is one constraint with Mixins"}),", they are treated as abstract classes, never initialized nor their constructor invoked"]}),(0,a.jsxs)(t.p,{children:["Read more about mixins in the ",(0,a.jsx)("a",{href:"https://www.typescriptlang.org/docs/handbook/mixins.html",target:"_blank",children:"TypeScript Documentation for Mixins"})]})]}),"\n",(0,a.jsxs)(t.p,{children:["The library provides all of the tools to handle mixins, including handling of the combined type of all mixins, through the namespaces ",(0,a.jsx)(t.code,{children:"ApiMixin"})," & ",(0,a.jsx)(t.code,{children:"SchemaMixin"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"decorator-api-composition",children:"Decorator API Composition"}),"\n",(0,a.jsxs)(t.p,{children:["Going back to our property class decorator API ",(0,a.jsx)(t.code,{children:"MyPropertyDecoratorFluentApiClass"}),", let's re-write it to use mixin plugins instead of coding\nthem in the body"]}),"\n",(0,a.jsxs)(i.A,{defaultValue:"api",values:[{label:"Decorator API",value:"api"},{label:"./optional.ts",value:"optional"},{label:"./default.ts",value:"default"}],children:[(0,a.jsx)(o.A,{value:"api",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:"import { PropertyDecoratorArgs } from '@pebula/decorate';\nimport { SchemaMixin, ApiMixin } from '@pebula/decorate/fluent';\n\nimport { OptionalSchemaConfig, OptionalPluginApi } from './options';\nimport { DefaultSchemaConfig, DefaultPluginApi } from './default';\n\nexport class MyPropertyDecoratorSchemaConfig extends SchemaMixin.Property().With(OptionalSchemaConfig, DefaultSchemaConfig) { }\n\nexport class MyPropertyDecoratorFluentApiClass extends ApiMixin.Property<MyPropertyDecoratorSchemaConfig>().With(OptionalPluginApi, DefaultPluginApi) {\n  static schemaFactory(args: PropertyDecoratorArgs): MyPropertyDecoratorSchemaConfig {\n    return new MyPropertyDecoratorSchemaConfig(args.key as string);\n  }\n}\n"})})}),(0,a.jsx)(o.A,{value:"optional",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",metastring:'title="/optional.ts"',children:"import { FluentMethodPlugin, FluentPropertyPlugin, ApiMixin } from '@pebula/decorate/fluent';\n\nexport class OptionalSchemaConfig {\n  optional?: boolean\n}\n\nexport abstract class OptionalPluginApi extends ApiMixin.MixinBase<OptionalSchemaConfig> {\n  @FluentPropertyPlugin()\n  get optional(): this {\n    this.$$context.schema.optional = true;\n    return this;\n  }\n}\n\n"})})}),(0,a.jsx)(o.A,{value:"default",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",metastring:'title="/default.ts"',children:"import { FluentMethodPlugin, FluentPropertyPlugin, ApiMixin } from '@pebula/decorate/fluent';\n\nexport class DefaultSchemaConfig {\n  defaultValue?: any;\n}\n\nexport abstract class DefaultPluginApi extends ApiMixin.MixinBase<DefaultSchemaConfig> {\n  @FluentMethodPlugin()\n  default(value: any): this {\n    this.$$context.schema.defaultValue = value;\n    return this;\n  }\n\n}\n"})})})]}),"\n",(0,a.jsx)(t.p,{children:"Couple of points:"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:["Plugins ",(0,a.jsx)(t.strong,{children:"do not"})," extend the same class the main ",(0,a.jsx)(t.em,{children:"Fluent Decorator API"})," class does (e.g. ",(0,a.jsx)(t.code,{children:"DecorPropertyApi"}),").",(0,a.jsx)(t.br,{}),"\n","Instead, they extend a designated mixin base class, ",(0,a.jsx)(t.code,{children:"ApiMixin.MixinBase"}),", following the template type used as their schema configuration object.",(0,a.jsx)(t.br,{}),"\n","Extending from ",(0,a.jsx)(t.code,{children:"MixinBase"})," is mandatory, the framework will not accept mixins that does not originate from ",(0,a.jsx)(t.code,{children:"MixinBase"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:["The main ",(0,a.jsx)(t.em,{children:"Fluent Decorator API"})," class and ",(0,a.jsx)(t.strong,{children:"Schema Configuration"})," class now have a ",(0,a.jsx)(t.strong,{children:"different extend expression"})]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsxs)(t.p,{children:["We've forced one plugin for each ",(0,a.jsx)(t.code,{children:"optional"})," and ",(0,a.jsx)(t.code,{children:"default"}),".",(0,a.jsx)(t.br,{}),"\n","In real life plugins usually group several members which share the same logical idea."]})}),"\n",(0,a.jsxs)(t.admonition,{type:"caution",children:[(0,a.jsxs)(t.p,{children:["On this page we address the composition of a ",(0,a.jsx)(t.strong,{children:"Fluent Decorator API"})," class through a base class mixin.",(0,a.jsx)(t.br,{}),"\n","That is, we create a new base class and mix in all of our mixins into the new base class, we then declare a class which ",(0,a.jsx)(t.strong,{children:"extend"})," the new mixed in base class."]}),(0,a.jsx)(t.p,{children:"This is the classic approach to mixins."}),(0,a.jsxs)(t.p,{children:["There is another mixin scenario where a ",(0,a.jsx)(t.strong,{children:"Fluent Decorator API"})," class already exists and we want to extend it after the fact.",(0,a.jsx)(t.br,{}),"\n","This is bit more advanced as it requires using typescript augmentation and a slightly different mixin behavior."]}),(0,a.jsxs)(t.p,{children:["For example, a node module you've installed which uses the ",(0,a.jsx)(t.strong,{children:"Fluent"})," library and you would like to extend it...."]}),(0,a.jsx)(t.p,{children:"We'll discuss this topic in a later phase"})]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},3634:(e,t,n)=>{n.d(t,{jd:()=>o});n(6326);var a=n(5519),r=(n(828),n(3252)),i=n(6870);n(3129);function o(e){const{to:t}=e;return(0,i.jsx)(r.A,{to:(0,a.A)(t),children:e.children})}},2121:(e,t,n)=>{n.d(t,{A:()=>o});n(6326);var a=n(7064);const r={tabItem:"tabItem_Z3hq"};var i=n(6870);function o(e){let{children:t,hidden:n,className:o}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,o),hidden:n,children:t})}},1740:(e,t,n)=>{n.d(t,{A:()=>w});var a=n(6326),r=n(7064),i=n(8730),o=n(841),s=n(2039),l=n(6319),c=n(5924),u=n(4976);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}(n);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const r=(0,o.W6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(i),(0,a.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(r.location.search);t.set(i,e),r.replace({...r.location,search:t.toString()})}),[i,r])]}function x(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,i=h(e),[o,l]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[c,d]=m({queryString:n,groupId:r}),[x,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,i]=(0,u.Dv)(n);return[r,(0,a.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:r}),g=(()=>{const e=c??x;return p({value:e,tabValues:i})?e:null})();(0,s.A)((()=>{g&&l(g)}),[g]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),f(e)}),[d,f,i]),tabValues:i}}var f=n(7605);const g={tabList:"tabList_FpWg",tabItem:"tabItem_lqZC"};var b=n(6870);function j(e){let{className:t,block:n,selectedValue:a,selectValue:o,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),u=e=>{const t=e.currentTarget,n=l.indexOf(t),r=s[n].value;r!==a&&(c(t),o(r))},d=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t),children:s.map((e=>{let{value:t,label:n,attributes:i}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>l.push(e),onKeyDown:d,onClick:u,...i,className:(0,r.A)("tabs__item",g.tabItem,i?.className,{"tabs__item--active":a===t}),children:n??t},t)}))})}function y(e){let{lazy:t,children:n,selectedValue:r}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function v(e){const t=x(e);return(0,b.jsxs)("div",{className:(0,r.A)("tabs-container",g.tabList),children:[(0,b.jsx)(j,{...t,...e}),(0,b.jsx)(y,{...t,...e})]})}function w(e){const t=(0,f.A)();return(0,b.jsx)(v,{...e,children:d(e.children)},String(t))}},5569:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var a=n(6326);const r={},i=a.createContext(r);function o(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);