(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(3),r=n(8),o=(n(0),n(92)),i={id:"introduction",title:"Introduction",sidebar_label:"1. Introduction"},c={unversionedId:"decorate-fluent/introduction",id:"decorate-fluent/introduction",isDocsHomePage:!1,title:"Introduction",description:"@pebula/decorate/fluent (fluent) is a package built on-top of @pebula/decorate which implement a decorator domain used for building fluent decorator APIs.",source:"@site/docs/decorate-fluent/introduction.md",slug:"/decorate-fluent/introduction",permalink:"/node/decorate/docs/decorate-fluent/introduction",editUrl:"https://github.com/pebula/node/tree/main/apps/docs/decorate/docs/docs/decorate-fluent/introduction.md",version:"current",sidebar_label:"1. Introduction",sidebar:"someSidebar",previous:{title:"Introduction",permalink:"/node/decorate/docs/decorate/introduction"},next:{title:"Decorator API Suite",permalink:"/node/decorate/docs/decorate-fluent/decorator-api-suite"}},l=[{value:"TL;DR",id:"tldr",children:[]},{value:"Overview",id:"overview",children:[]},{value:"Fluent Decorator API",id:"fluent-decorator-api",children:[]}],p={toc:l};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"@pebula/decorate/fluent")," (fluent) is a package built on-top of ",Object(o.b)("inlineCode",{parentName:"p"},"@pebula/decorate")," which implement a decorator domain used for building fluent decorator APIs."),Object(o.b)("h2",{id:"tldr"},"TL;DR"),Object(o.b)("p",null,"Take a decorator function and make it a Fluent API object that can enrich the metadata for the decorated property."),Object(o.b)("p",null,"Another way to visualize it:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"class X {\n  @P({\n    optional: true,\n    default: 50,\n  })\n  value: number\n}\n")),Object(o.b)("p",null,"Convert the above API to:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"class X {\n  @P.optional.default(50) value: number\n}\n")),Object(o.b)("p",null,"While allowing plugins, adding functionality on the fly, type safety and more..."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"  You can achieve the same results with each of the approaches above, including type enforcement, plugin system, etc...",Object(o.b)("br",{parentName:"p"}),"\n","It is just a matter of preference."))),Object(o.b)("h2",{id:"overview"},"Overview"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"With ",Object(o.b)("strong",{parentName:"p"},"Fluent"),", we define plugins which compose a ",Object(o.b)("strong",{parentName:"p"},"Fluent Decorator API"),". The end-user uses this API to define the metadata.  ")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"The API will store the metadata in a ",Object(o.b)("strong",{parentName:"p"},"Schema Configuration")," object, bound to the decorated target.  ")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"We can then query for the ",Object(o.b)("strong",{parentName:"p"},"Schema Configuration")," for a target and use it to implement our business logic."))),Object(o.b)("p",null,"Let's break it down:"),Object(o.b)("hr",null),Object(o.b)("p",null,"(1) With ",Object(o.b)("strong",{parentName:"p"},"Fluent"),", we define plugins which compose a ",Object(o.b)("strong",{parentName:"p"},"Fluent Decorator API"),". The end-user uses this API to define the metadata."),Object(o.b)("hr",null),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"class X {\n  @P.optional.default(50) value: number\n}\n")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"optional")," and ",Object(o.b)("inlineCode",{parentName:"p"},"default")," are plugins which we implement and they create the ",Object(o.b)("strong",{parentName:"p"},"Fluent Decorator API"),".",Object(o.b)("br",{parentName:"p"}),"\n","They are not part of the library, we call them plugins because they extends the bare naked decorator (",Object(o.b)("inlineCode",{parentName:"p"},"P")," above)."),Object(o.b)("p",null,"For each plugin, we provide a function that will handle the input and change the state."),Object(o.b)("hr",null),Object(o.b)("p",null,"(2) The API will store the metadata in a ",Object(o.b)("em",{parentName:"p"},"Schema Configuration")," object, bound to the decorated target."),Object(o.b)("hr",null),Object(o.b)("p",null,"We mentioned that the plugin implementations we provide will change the state.",Object(o.b)("br",{parentName:"p"}),"\n","We call this state ",Object(o.b)("strong",{parentName:"p"},"Schema Configuration")," and it is a fully typed interface we provide when extending the API with plugins."),Object(o.b)("p",null,"An abstract illustration of the ",Object(o.b)("inlineCode",{parentName:"p"},"optional")," & ",Object(o.b)("inlineCode",{parentName:"p"},"default")," plugin:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"class SchemaConfig {\n  defaultValue?: any;\n  isOptional?: boolean;\n}\n\nclass Plugin {\n  get optional(): this {\n    this.$$context.schema.isOptional = true;\n    return this;\n  }\n  default(value: any): this {\n    this.$$context.schema.defaultValue = value;\n    return this;\n  }\n}\n")),Object(o.b)("p",null,"Where ",Object(o.b)("inlineCode",{parentName:"p"},"this.$$context.schema")," extends ",Object(o.b)("inlineCode",{parentName:"p"},"SchemaConfig")),Object(o.b)("hr",null),Object(o.b)("p",null,"(3) We can then query for the ",Object(o.b)("em",{parentName:"p"},"Schema Configuration")," for a target and use it to implement our business logic."),Object(o.b)("hr",null),Object(o.b)("p",null,"Basically, we ask the library if it has a ",Object(o.b)("inlineCode",{parentName:"p"},"SchemaConfig")," for a class.",Object(o.b)("br",{parentName:"p"}),"\n","If it does, we can implement our logic."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"class X {\n  @P.optional.default(50) value: number\n}\n")),Object(o.b)("p",null,"Above, when we query for a ",Object(o.b)("strong",{parentName:"p"},"Schema Configuration")," for ",Object(o.b)("inlineCode",{parentName:"p"},"X"),", we will get back the following ",Object(o.b)("inlineCode",{parentName:"p"},"SchemaConfig")," instance:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'{\n  "defaultValue": 50,\n  "isOptional": true\n};\n')),Object(o.b)("p",null,"Now, we can implement our logic."),Object(o.b)("p",null,"For example, if we build a validation/sanitation library we will be able to set the value 50 to the property ",Object(o.b)("inlineCode",{parentName:"p"},"value")," if it is not set."),Object(o.b)("p",null,"Now we're ready to start the walk-through!"),Object(o.b)("h2",{id:"fluent-decorator-api"},"Fluent Decorator API"),Object(o.b)("p",null,"A fluent decorator API is a decorator method which also contains additional methods and properties."),Object(o.b)("p",null,"In the following end-user example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"class X {\n  @P.optional.default(50) value: number\n}\n")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"P")," is the decorator, it also returns and object with the ",Object(o.b)("inlineCode",{parentName:"p"},"optional")," and ",Object(o.b)("inlineCode",{parentName:"p"},"default")," members.",Object(o.b)("br",{parentName:"p"}),"\n","Each of these members is also the ",Object(o.b)("inlineCode",{parentName:"p"},"P")," decorator as well as returning the same object as ",Object(o.b)("inlineCode",{parentName:"p"},"P"),"."),Object(o.b)("p",null,"We can describe the API using the following interface:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"interface DecoratorFluentApi {\n  (target: object, key: string | symbol, descriptor?: PropertyDescriptor): PropertyDescriptor | void;\n\n  optional: this;\n  default(value: any): this;\n}\n")),Object(o.b)("p",null,"A fluent decorator API means that at each point, the value return must be a valid decorator but also the context for an additional API operation."))}b.isMDXComponent=!0},92:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),b=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=b(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=b(n),d=a,m=u["".concat(i,".").concat(d)]||u[d]||s[d]||o;return n?r.a.createElement(m,c(c({ref:t},p),{},{components:n})):r.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);