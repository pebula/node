"use strict";(self.webpackChunknode=self.webpackChunknode||[]).push([[9072],{8119:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>c,default:()=>h,frontMatter:()=>d,toc:()=>o});var r=t(4848),s=t(8453);const d={},c=void 0,o=[{value:"DocumentQuery.set() method",id:"documentqueryset-method",level:2},{value:"Parameters",id:"parameters",level:2}];function i(e){const n={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"./index.md",children:"Home"})," > ",(0,r.jsx)(n.a,{href:"./goosetyped.md",children:"@pebula/goosetyped"})," > ",(0,r.jsx)(n.a,{href:"./goosetyped.documentquery.md",children:"DocumentQuery"})," > ",(0,r.jsx)(n.a,{href:"./goosetyped.documentquery.set.md",children:"set"})]}),"\n",(0,r.jsx)(n.h2,{id:"documentqueryset-method",children:"DocumentQuery.set() method"}),"\n",(0,r.jsxs)(n.p,{children:["Adds a ",(0,r.jsx)(n.code,{children:"$set"})," to this query's update without changing the operation. This is useful for query middleware so you can add an update regardless of whether you use ",(0,r.jsx)(n.code,{children:"updateOne()"}),", ",(0,r.jsx)(n.code,{children:"updateMany()"}),", ",(0,r.jsx)(n.code,{children:"findOneAndUpdate()"}),", etc."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"set(path: string | Record<string, unknown>, value?: any): this;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)("table",{children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:(0,r.jsx)(n.p,{children:"Parameter"})}),(0,r.jsx)("th",{children:(0,r.jsx)(n.p,{children:"Type"})}),(0,r.jsx)("th",{children:(0,r.jsx)(n.p,{children:"Description"})})]})}),(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)(n.p,{children:"path"})}),(0,r.jsx)("td",{children:(0,r.jsx)(n.p,{children:"string | Record<string, unknown>"})}),(0,r.jsx)("td",{})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)(n.p,{children:"value"})}),(0,r.jsx)("td",{children:(0,r.jsx)(n.p,{children:"any"})}),(0,r.jsx)("td",{children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"(Optional)"})})})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsx)(n.p,{children:"this"})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var r=t(6540);const s={},d=r.createContext(s);function c(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);