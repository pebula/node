"use strict";(self.webpackChunknode=self.webpackChunknode||[]).push([[459],{5780:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var o=t(4848),i=t(8453);const s={id:"example",title:"Real Life Example",sidebar_label:"5. Real Life Example"},a=void 0,l={id:"decorate-fluent/example",title:"Real Life Example",description:"The fluent API decorator expression above is a valid expression from the library @pebula/tom.",source:"@site/docs/decorate-fluent/example.md",sourceDirName:"decorate-fluent",slug:"/decorate-fluent/example",permalink:"/node/docs-decorate/docs/decorate-fluent/example",draft:!1,unlisted:!1,editUrl:"https://github.com/pebula/node/tree/main/apps/docs/decorate/docs/docs/decorate-fluent/example.md",tags:[],version:"current",frontMatter:{id:"example",title:"Real Life Example",sidebar_label:"5. Real Life Example"},sidebar:"sidebar",previous:{title:"4. Decorator API Class Mixins",permalink:"/node/docs-decorate/docs/decorate-fluent/composing-decorator-api-class"}},r={},d=[];function c(e){const n={admonition:"admonition",br:"br",code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"class X {\n  @P.optional.default(50) value: number\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The fluent API decorator expression above is a valid expression from the library ",(0,o.jsx)(n.code,{children:"@pebula/tom"}),".",(0,o.jsx)(n.br,{}),"\n","It is defined within ",(0,o.jsx)(n.code,{children:"@pebula/tom"})," using ",(0,o.jsx)(n.code,{children:"@pebula/decorate/fluent"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["The expression tells ",(0,o.jsx)(n.code,{children:"@pebula/tom"})," that the property ",(0,o.jsx)(n.code,{children:"value"})," is optional and it has the default value 50.",(0,o.jsx)(n.br,{}),"\n","This enables validation, serialization, etc... to be done by ",(0,o.jsx)(n.code,{children:"@pebula/tom"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { FluentMethodPlugin, FluentPropertyPlugin, ApiMixin } from '@pebula/decorate/fluent';\n\nexport class PropertyMetadataSchema {\n  defaultValue?: any;\n  optional?: boolean\n}\n\nexport abstract class PropertyMetadataApi extends ApiMixin.MixinBase<PropertyMetadataSchema> {\n  @FluentPropertyPlugin()\n  get optional(): this {\n    this.$$context.schema.optional = true;\n    return this;\n  }\n\n  @FluentMethodPlugin()\n  default(value: any): this {\n    this.$$context.schema.defaultValue = value;\n    return this;\n  }\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["We ignore the mixin expression for now...",(0,o.jsx)(n.br,{}),"\n","All we need to know is that ",(0,o.jsx)(n.code,{children:"this.$$context.schema"})," has the ",(0,o.jsx)(n.code,{children:"optional"})," property typed because of the mixin expression."]}),"\n",(0,o.jsxs)(n.p,{children:["Now, when ",(0,o.jsx)(n.code,{children:"@pebula/tom"})," wants to build a schema for the class ",(0,o.jsx)(n.code,{children:"X"})," it will query for"]}),"\n",(0,o.jsxs)(n.p,{children:["Moving on... ",(0,o.jsx)(n.code,{children:"@pebula/tom/validation"})," is a validation library based on ",(0,o.jsx)(n.code,{children:"@pebula/tom"}),", if imported it will extend the fluent API so the following expression is valid:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"class X {\n  @P.optional.default(50).min(5).max(5000).not.equal(999) value: number\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The expression tells ",(0,o.jsx)(n.code,{children:"@pebula/tom/validation"})," that on top of what known already (optional, default) the value must also\nbe between 5 and 5000 but not 999."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Yes, the entire API is type-safe with full intellisense support!"}),"\n",(0,o.jsxs)(n.li,{children:["Yes, we extended both ",(0,o.jsx)(n.strong,{children:"design time"})," type information and ",(0,o.jsx)(n.strong,{children:"runtime support"})," for the extension methods (min, max, equal, not)"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["If ",(0,o.jsx)(n.code,{children:"@pebula/tom/validation"})," is not imported, the expression would cause a TypeScript compilation (design time) error."]})}),"\n",(0,o.jsxs)(n.p,{children:["The API is defined using ",(0,o.jsx)(n.code,{children:"@pebula/decorate/fluent"}),", mostly in ",(0,o.jsx)(n.code,{children:"@pebula/tom"})," but it is so powerful that"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var o=t(6540);const i={},s=o.createContext(i);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);