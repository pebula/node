{
  "$schema": "https://json-schema.org/schema",
  "version": 2,
  "title": "Build executor",
  "description": "",
  "type": "object",
  "properties": {
    "task": {
      "$ref": "#/definitions/buildPipeTask"
    },
    "taskOptions": {
      "type": "object",
      "description": "A dictionary with keys corresponding to task names, when a match is found the value is merged to the options of the matched task",
      "additionalProperties": {
        "type": "object",
        "additionalProperties": true
      }
    },
    "envFile": {
      "type": "string",
      "description": "You may specify a custom .env file path"
    },
    "env": {
      "type": "object",
      "additionalProperties": true,
      "description": "Object added to the env manually, note that this is loaded for every pipe. If you have child pipe executors either set each one or set a single setup at the root."
    }
  },
  "required": [
    "task"
  ],
  "outputCapture": "direct-nodejs",
  "definitions": {
    "buildPipeTask": {
      "oneOf": [
        {
          "$ref": "#/definitions/buildPipeExecutionGroup"
        },
        {
          "$ref": "#/definitions/buildPipeTargetTask"
        },
        {
          "$ref": "#/definitions/buildPipeRunCommandTask"
        },
        {
          "$ref": "#/definitions/buildPipeFromFileTask"
        }
      ]
    },
    "buildPipeExecutionGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "A unique name which identify this task which allows targeting options to it when executing the pipe"
        },
        "type": {
          "type": "string",
          "enum": [
            "group"
          ]
        },
        "composition": {
          "type": "string",
          "enum": [
            "parallel",
            "sequence"
          ],
          "default": "sequence"
        },
        "pipe": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/buildPipeTask"
          }
        }
      },
      "required": [
        "type",
        "pipe"
      ]
    },
    "buildPipeTargetTask": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "A unique name which identify this task which allows targeting options to it when executing the pipe"
        },
        "type": {
          "type": "string",
          "enum": [
            "target"
          ]
        },
        "target": {
          "type": "string"
        },
        "runAsCmd": {
          "type": "boolean"
        },
        "skipIfNotExist": {
          "type": "boolean"
        },
        "options": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "type",
        "target"
      ]
    },
    "buildPipeFromFileTask": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "A unique name which identify this task which allows targeting options to it when executing the pipe"
        },
        "type": {
          "type": "string",
          "enum": [
            "fromFile"
          ]
        },
        "path": {
          "description": " Path to the file to load, relative to the workspace root.",
          "type": "string"
        },
        "args": {
          "type": "array",
          "description": "Extra arguments.",
          "items": {
            "type": "string"
          }
        },
        "options": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "type",
        "path"
      ]
    },
    "buildPipeRunCommandTask": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "A unique name which identify this task which allows targeting options to it when executing the pipe"
        },
        "type": {
          "type": "string",
          "enum": [
            "runCommand"
          ]
        },
        "options": {
          "version": 2,
          "title": "Run Commands",
          "description": "Run any custom commands with Nx.",
          "type": "object",
          "cli": "nx",
          "outputCapture": "pipe",
          "presets": [
            {
              "name": "Arguments forwarding",
              "keys": [
                "commands"
              ]
            },
            {
              "name": "Custom done conditions",
              "keys": [
                "commands",
                "readyWhen"
              ]
            },
            {
              "name": "Setting the cwd",
              "keys": [
                "commands",
                "cwd"
              ]
            }
          ],
          "properties": {
            "commands": {
              "type": "array",
              "description": "Commands to run in child process.",
              "items": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "command": {
                        "type": "string",
                        "description": "Command to run in child process."
                      },
                      "forwardAllArgs": {
                        "type": "boolean",
                        "description": "Whether arguments should be forwarded when interpolation is not present."
                      },
                      "prefix": {
                        "type": "string",
                        "description": "Prefix in front of every line out of the output"
                      },
                      "color": {
                        "type": "string",
                        "description": "Color of the output",
                        "enum": [
                          "black",
                          "red",
                          "green",
                          "yellow",
                          "blue",
                          "magenta",
                          "cyan",
                          "white"
                        ]
                      },
                      "bgColor": {
                        "type": "string",
                        "description": "Background color of the output",
                        "enum": [
                          "bgBlack",
                          "bgRed",
                          "bgGreen",
                          "bgYellow",
                          "bgBlue",
                          "bgMagenta",
                          "bgCyan",
                          "bgWhite"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "An optional description useful for inline documentation purposes. It is not used as part of the execution of the command."
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "command"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "x-priority": "important"
            },
            "command": {
              "type": "string",
              "description": "Command to run in child process.",
              "x-priority": "important"
            },
            "parallel": {
              "type": "boolean",
              "description": "Run commands in parallel.",
              "default": true,
              "x-priority": "important"
            },
            "readyWhen": {
              "type": "string",
              "description": "String to appear in `stdout` or `stderr` that indicates that the task is done. When running multiple commands, this option can only be used when `parallel` is set to `true`. If not specified, the task is done when all the child processes complete."
            },
            "args": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ],
              "description": "Extra arguments. You can pass them as follows: nx run project:target --args='--wait=100'. You can then use {args.wait} syntax to interpolate them in the workspace config file. See example [above](#chaining-commands-interpolating-args-and-setting-the-cwd)"
            },
            "envFile": {
              "type": "string",
              "description": "You may specify a custom .env file path."
            },
            "color": {
              "type": "boolean",
              "description": "Use colors when showing output of command.",
              "default": false
            },
            "cwd": {
              "type": "string",
              "description": "Current working directory of the commands. If it's not specified the commands will run in the workspace root, if a relative path is specified the commands will run in that path relative to the workspace root and if it's an absolute path the commands will run in that path."
            },
            "env": {
              "type": "object",
              "description": "Environment variables that will be made available to the commands. This property has priority over the `.env` files.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "__unparsed__": {
              "hidden": true,
              "type": "array",
              "items": {
                "type": "string"
              },
              "$default": {
                "$source": "unparsed"
              },
              "x-priority": "internal"
            },
            "forwardAllArgs": {
              "type": "boolean",
              "description": "Whether arguments should be forwarded when interpolation is not present.",
              "default": true
            },
            "tty": {
              "type": "boolean",
              "description": "Whether commands should be run with a tty terminal",
              "hidden": true
            }
          },
          "additionalProperties": true,
          "oneOf": [
            {
              "required": [
                "commands"
              ]
            },
            {
              "required": [
                "command"
              ]
            }
          ],
          "examplesFile": "../../../docs/run-commands-examples.md"
        }
      },
      "required": [
        "type",
        "options"
      ]
    }
  }
}