"use strict";(self.webpackChunknode=self.webpackChunknode||[]).push([[2966],{2628:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>l,default:()=>p,frontMatter:()=>s,toc:()=>a});var r=t(4848),o=t(8453),i=t(6640);const s={id:"introduction",title:"Introduction",sidebar_label:"1. Introduction"},l=void 0,a=[{value:"Using a reporter",id:"using-a-reporter",level:2},{value:"External Built-In reporters",id:"external-built-in-reporters",level:2},{value:"Customizing your own reporter",id:"customizing-your-own-reporter",level:2}];function c(e){const n={admonition:"admonition",blockquote:"blockquote",br:"br",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Reporters are used to output the statistics and result of the suite/s, case/s and other metadata collected in the benchmarking process."}),"\n",(0,r.jsxs)(n.p,{children:["Each report implements it's own output medium (console, file, network, etc...).",(0,r.jsx)(n.br,{}),"\n","A reporter can output into multiple mediums and you can assign any number of reporters to your suite/container."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Touchstone"})," comes with one built in reporter and additional external built-in reports which are\nphysically part of the ",(0,r.jsx)(n.code,{children:"@pebula/touchstone"})," package but are not imported from the main module."]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"This is by design to prevent dependency hell since some reporters require additional 3rd party node modules which are not required by the core module."})}),"\n",(0,r.jsx)(n.h2,{id:"using-a-reporter",children:"Using a reporter"}),"\n",(0,r.jsx)(n.p,{children:"To use a reporter just mix it into a suite/container and it will just work."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { TouchStone, SimpleConsoleReporter } from '@pebula/touchstone';\nimport './suites'; // make sure all suites are loaded\n\n@TouchStone()\nclass MyPerformanceTest extends Mixin(SimpleConsoleReporter) {\n  benchmarkOptions = {\n    delay: 0.5,\n    initCount: 5,\n  };\n}\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsx)(n.p,{children:"Note that some reporter are configurable (optional or required).\nThis is done through properties or methods provided on the mixin host."}),(0,r.jsx)(n.p,{children:"See the documentation for each reporter for details."})]}),"\n",(0,r.jsx)(n.h2,{id:"external-built-in-reporters",children:"External Built-In reporters"}),"\n",(0,r.jsxs)(n.p,{children:["An external built-int reporter is a reporter which is available when you install the ",(0,r.jsx)(n.code,{children:"@pebula/touchstone"})," module\nbut not as part of the core module. ",(0,r.jsx)(n.strong,{children:"I.E."})," You can't import it from ",(0,r.jsx)(n.code,{children:"@pebula/touchstone"})," directly."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, to use ",(0,r.jsx)(i.jd,{to:"docs/reporters/pretty-console-reporter",children:(0,r.jsx)(n.code,{children:"PrettyConsoleReporter"})})," import it from ",(0,r.jsx)(n.code,{children:"@pebula/touchstone/reporters/pretty-console"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Some external reporters require dependencies and some not, see the documentation for each one to better understand each reporter and the requirements for it."}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:["If an external built-in reporter require dependencies you must install them.",(0,r.jsx)(n.br,{}),"\n","The dependencies of all external built-in reporters are part of the ",(0,r.jsx)(n.strong,{children:"peerDependencies"})," list of the core module."]})}),"\n",(0,r.jsx)(n.h2,{id:"customizing-your-own-reporter",children:"Customizing your own reporter"}),"\n",(0,r.jsxs)(n.p,{children:["It is easy to customize your own reporter.",(0,r.jsx)(n.br,{}),"\n",'In fact, all reports are "customized" using the same customization format.']}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"A reporter is nothing but a class hooked into life-cycle events"})}),"\n",(0,r.jsx)(n.p,{children:"Here's the gist of it:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import {\n  OnStart,\n  OnCaseComplete,\n  OnComplete,\n  OnTouchStoneStart,\n  OnTouchStoneEnd,\n  OnError,\n  SuiteStartEvent,\n  CaseCompleteEvent,\n  SuiteErrorEvent,\n  SuiteCompleteEvent,\n  TouchStoneStartEvent,\n  TouchStoneEndEvent\n} from '@pebula/touchstone';\n\nexport abstract class SimpleConsoleReporter {\n\n  @OnTouchStoneStart() // Do something when we start benchmarking\n  onSimpleConsoleReporterInitialize(event: TouchStoneStartEvent) { }\n\n  @OnStart() // Do something when we start benchmarking a new suite\n  onSimpleConsoleReporterStart(event: SuiteStartEvent) { }\n\n  @OnCaseComplete() // Do something when we end benchmarking a case\n  onSimpleConsoleReporterCycle(event: CaseCompleteEvent) { }\n\n  @OnError() // Do something when there is an error while benchmarking\n  onSimpleConsoleReporterError(event: SuiteErrorEvent) { }\n\n  @OnComplete() // Do something when we end benchmarking a suite\n  onSimpleConsoleReporterComplete(event: SuiteCompleteEvent) { }\n\n  @OnTouchStoneEnd() // Do something when all suites are benchmarked and we're about to end the process\n  onSimpleConsoleReporterFinalize(event: TouchStoneEndEvent) { }\n\n}\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Note that not all events we're used in the above template"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},6640:(e,n,t)=>{t.d(n,{z7:()=>d,jd:()=>h,O2:()=>m});var r=t(6540),o=t(6025),i=t(4586),s=t(8774),l=t(4848);var a=t(5293),c=t(1765);const p={plain:{color:"#f8f8f2",backgroundColor:"#272822"},styles:[{types:["comment"],style:{color:"rgb(136, 132, 111)"}},{types:["string","changed"],style:{color:"rgb(230, 219, 116)"}},{types:["punctuation","tag","deleted"],style:{color:"rgb(249, 38, 114)"}},{types:["number","builtin"],style:{color:"rgb(174, 129, 255)"}},{types:["variable"],style:{color:"rgb(248, 248, 242)"}},{types:["function","attr-name","inserted"],style:{color:"rgb(166, 226, 46)"}}]},u={codeSnippet:"codeSnippet_KFiO"};function d(e){var n=(0,i.A)().siteConfig.themeConfig.prism||{},t=(0,r.useState)(!1),o=(t[0],t[1]);(0,r.useEffect)((function(){o(!0)}),[]);var s=(0,a.G)().isDarkTheme,d=n.theme||p,h=n.darkTheme||d,m=s?h:d,x=e.lang,g=void 0===x?"yaml":x,b=e.snippet;return(0,l.jsx)(c.f4,{theme:m,code:b,language:g,children:function(e){var n=e.className,t=e.style,r=e.tokens,o=e.getLineProps,i=e.getTokenProps;return(0,l.jsx)("pre",{className:n+" "+u.codeSnippet,style:t,children:r.map((function(e,n){return(0,l.jsx)("div",Object.assign({},o({line:e,key:n}),{children:e.map((function(e,n){return(0,l.jsx)("span",Object.assign({},i({token:e,key:n})))}))}))}))})}})}function h(e){var n=e.to;return(0,l.jsx)(s.A,{to:(0,o.A)(n),children:e.children})}function m(e){var n=e.to;return(0,l.jsx)("a",{href:(0,o.A)(n),target:"_blank",children:e.children})}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var r=t(6540);const o={},i=r.createContext(o);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);