"use strict";(self.webpackChunknode=self.webpackChunknode||[]).push([[6271],{4922:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>x,frontMatter:()=>l,metadata:()=>u,toc:()=>h});var t=i(4848),r=i(8453),s=i(1386),o=i(9635),a=i(6640);const l={id:"provisioning",title:"Provisioning",sidebar_label:"6. Provisioning"},c=void 0,u={id:"guide/provisioning",title:"Provisioning",description:"Provisioning adds management capabilities over your service bus entities.",source:"@site/docs/guide/provisioning.md",sourceDirName:"guide",slug:"/guide/provisioning",permalink:"/node/docs-nesbus/docs/guide/provisioning",draft:!1,unlisted:!1,editUrl:"https://github.com/pebula/node/tree/main/apps/docs/nesbus/docs/docs/guide/provisioning.md",tags:[],version:"current",frontMatter:{id:"provisioning",title:"Provisioning",sidebar_label:"6. Provisioning"},sidebar:"sidebar",previous:{title:"5. The Context",permalink:"/node/docs-nesbus/docs/guide/the-context"},next:{title:"7. Interceptors",permalink:"/node/docs-nesbus/docs/guide/interceptors"}},d={},h=[{value:"Basic Provisioning",id:"basic-provisioning",level:2},{value:"Management Clients",id:"management-clients",level:2},{value:"ARM Client",id:"arm-client",level:3},{value:"ATOM Client (experimental)",id:"atom-client-experimental",level:3},{value:"Entity Creation Configuration",id:"entity-creation-configuration",level:2},{value:"Params",id:"params",level:3},{value:"Additional Provision Configuration",id:"additional-provision-configuration",level:3},{value:"Entity Configuration Adapter",id:"entity-configuration-adapter",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Provisioning adds management capabilities over your service bus entities."}),"\n",(0,t.jsxs)(n.p,{children:["If you try to register to a queue, topic or subscription that does not exist, service bus will throw an error.\nWith provision enabled, you can instruct ",(0,t.jsx)(n.strong,{children:"nestbus"})," to verify (eager, on load) that the entity exist and if not create it."]}),"\n",(0,t.jsx)(n.h2,{id:"basic-provisioning",children:"Basic Provisioning"}),"\n",(0,t.jsx)(n.p,{children:"The most basic provision configuration is to decide what level of provisioning are we doing:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"skip"})," [default] - provision is disabled"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"verify"})," - verify entity exists when the server bootstraps, throw if it does not exist (eager check)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"verifyCreate"})," - verify entity exists when the server bootstraps, create the entity if it does not exists"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"@Controller()\nexport class ServiceBusController {\n  @Queue<MethodDecorator>(({\n    name: 'nesbus-queue.demo',\n    provision: 'verifyCreate' // or 'skip' or 'verify'\n  })\n  async myQueueEntity(@Ctx() context: SbContext) { }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"This is a valid configuration but it is not enough by itself."}),"\n",(0,t.jsx)(n.p,{children:"What happens when the library detects that an entity does not exist and it needs to create it?\nCreating a new service bus entity require additional configuration."}),"\n",(0,t.jsxs)(n.p,{children:["Moreover, the configuration we need is based on the type of the entity, i.e. creating a ",(0,t.jsx)(n.code,{children:"subscription"})," is different than creating a ",(0,t.jsx)(n.code,{children:"queue"}),"."]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["That being said, setting ",(0,t.jsx)(n.code,{children:"provision: 'verifyCreate'"})," is a valid definition with the help of a small adapter, more on this in a couple of paragraphs."]})}),"\n",(0,t.jsx)(n.h2,{id:"management-clients",children:"Management Clients"}),"\n",(0,t.jsx)(n.p,{children:"Verifying and/or creating entities requires management capabilities so we can create/update entities in service bus.\nTo enable provisioning we must provide a management configuration otherwise it is disabled."}),"\n",(0,t.jsx)(n.p,{children:"There are currently 2 management clients available:"}),"\n",(0,t.jsx)(n.h3,{id:"arm-client",children:"ARM Client"}),"\n",(0,t.jsx)(n.p,{children:"The official service bus management package offered by azure, when using this client you must install the package:"}),"\n",(0,t.jsxs)(s.A,{defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"NPM",value:"npm"}],children:[(0,t.jsx)(o.A,{value:"yarn",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ yarn add @azure/arm-servicebus\n"})})}),(0,t.jsx)(o.A,{value:"npm",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ npm install @azure/arm-servicebus\n"})})})]}),"\n",(0,t.jsxs)(n.p,{children:["Then configure the management client when registering the module we need to provide the management\nconfiguration ",(0,t.jsx)(a.ol,{type:"interface",symbol:"SbManagementClientArmOptions"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { ApplicationTokenCredentials } from '@azure/ms-rest-nodeauth';\nimport { Module } from '@nestjs/common';\nimport { ServiceBusModule, SbServerOptions } from '@pebula/nesbus';\n\nconst sbServerOptions: SbServerOptions[] = [\n  {\n    client: { /* Client configuration options... */ },\n    management: {\n      credentials: {\n        host: 'my-service-bus.servicebus.windows.net,\n        resourceGroupName: 'NorthEurope',\n        namespace: 'my-service-bus',\n        subscriptionId: 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx',\n        credentials: new ApplicationTokenCredentials(\n          'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', // clientId,\n          'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', // tenantId,\n          'K2.329cnlw3293:#@Mc2EK#)CKE', // clientSecret,\n        ),\n      },\n    },\n  },\n];\n\n@Module({\n  imports: [\n    ServiceBusModule.register({ servers: sbServerOptions }),\n  ],\n})\nexport class AppModule {}\n"})}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsxs)(n.p,{children:["In this example, the credentials used are ",(0,t.jsx)(n.code,{children:"ApplicationTokenCredentials"})," but you can use any token credentials object\nwhich implements the ",(0,t.jsx)(n.code,{children:"getToken()"})," interface."]}),(0,t.jsxs)(n.p,{children:["In most cases, one of the following from the ",(0,t.jsx)(n.code,{children:"@azure/ms-rest-nodeauth"})," package:"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"ApplicationTokenCredentials"}),"\n",(0,t.jsx)(n.li,{children:"UserTokenCredentials"}),"\n",(0,t.jsx)(n.li,{children:"DeviceTokenCredentials"}),"\n",(0,t.jsxs)(n.li,{children:["MSITokenCredentials Token audience (or resource in case of MSI based credentials) to use when creating the credentials is ",(0,t.jsx)(n.a,{href:"https://servicebus.azure.net/",children:"https://servicebus.azure.net/"})]}),"\n"]}),(0,t.jsxs)(n.p,{children:["For more details see the API Docs for ",(0,t.jsx)(a.ol,{type:"interface",symbol:"ServiceBusManagementAadTokenCredentials"})]})]}),"\n",(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"@azure/arm-servicebus"})," supports authentication & authorization through azure active directory."]}),(0,t.jsx)(n.p,{children:"This has 2 limitations:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"You will need to manage permissions through azure's role based authorization model."}),"\n",(0,t.jsx)(n.li,{children:"You can not use connection strings to connect to service bus."}),"\n"]})]}),"\n",(0,t.jsx)(n.h3,{id:"atom-client-experimental",children:"ATOM Client (experimental)"}),"\n",(0,t.jsxs)(n.p,{children:["The ATOM Client is a management client the uses and authentication and authorization model based on a connection string, which is not possible\nwhen using the ",(0,t.jsx)(n.code,{children:"@azure/arm-servicebus"})," library."]}),"\n",(0,t.jsxs)(n.p,{children:["The client is in development by the ",(0,t.jsx)(n.code,{children:"@azure/service-bus"})," team and is planned to release with the ",(0,t.jsx)(n.code,{children:"@azure/service-bus"})," pacakge."]}),"\n",(0,t.jsx)(n.p,{children:"The client itself is operational but not publicly exposed."}),"\n",(0,t.jsxs)(n.p,{children:["To allow using it today, ",(0,t.jsx)(n.strong,{children:"nesbus"})," includes a copy of the ATOM client from the ",(0,t.jsx)(n.code,{children:"@azure/service-bus"})," repository, with no changes.\nOnce officially released the copy will be removed and the original ATOM client will be used instead. If things go as planned\nthis will go unnoticed, without breaking changes."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { Module } from '@nestjs/common';\nimport { ServiceBusModule, SbServerOptions } from '@pebula/nesbus';\n\nconst sbServerOptions: SbServerOptions[] = [\n  {\n    client: { /* Client configuration options... */ },\n    management: {\n      credentials: {\n        connectionString: 'MY-SAS-CONNECTION-STRING',\n      },\n    },\n  },\n];\n\n@Module({\n  imports: [\n    ServiceBusModule.register({ servers: sbServerOptions }),\n  ],\n})\nexport class AppModule {}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"entity-creation-configuration",children:"Entity Creation Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["Instead of setting ",(0,t.jsx)(n.code,{children:"provision: 'verifyCreate'"})," we can set ",(0,t.jsx)(n.code,{children:"provision"})," to an object that contains the configuration required when creating an entity:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"@Controller()\nexport class ServiceBusController {\n  @Queue<MethodDecorator>(({\n    name: 'nesbus-queue.demo',\n    provision: {\n      type: 'verifyCreate',\n      params: { /* Default, entity specific, values */\n        deadLetteringOnMessageExpiration: true,\n        maxSizeInMegabytes: 1024,\n        defaultMessageTtl: 'P14D',\n        lockDuration: 'PT5M',\n      }\n      /* ... Additional, entity specific, provisioning values */\n    }\n  })\n  async myQueueEntity(@Ctx() context: SbContext) { }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"params",children:"Params"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"params"})," property is an object that defines the default values that each entity instance will have when created."]}),"\n",(0,t.jsx)(n.p,{children:"This type differs based on the provision context, i.e. the decorator used."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["For Queue see ",(0,t.jsx)(a.vQ,{type:"arm",symbol:"SBQueue"})]}),"\n",(0,t.jsxs)(n.li,{children:["For Topic see ",(0,t.jsx)(a.vQ,{type:"arm",symbol:"SBTopic"})]}),"\n",(0,t.jsxs)(n.li,{children:["For Subscription see ",(0,t.jsx)(a.vQ,{type:"arm",symbol:"SBSubscription"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"additional-provision-configuration",children:"Additional Provision Configuration"}),"\n",(0,t.jsx)(n.p,{children:"The additional provision configuration also depends on the entity being provisioned."}),"\n",(0,t.jsxs)(n.p,{children:["For example, a ",(0,t.jsx)(n.strong,{children:"Subscription"})," is a child entity of ",(0,t.jsx)(n.strong,{children:"Topic"}),", you can create a nested provision option\nto also run a provision to make sure that the topic exists."]}),"\n",(0,t.jsx)(n.p,{children:"See the API docs for more details:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(a.ol,{type:"interface",symbol:"SbQueueEntityProvision"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(a.ol,{type:"interface",symbol:"SbTopicEntityProvision"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(a.ol,{type:"interface",symbol:"SbTopicSubscriptionEntityProvision"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(a.ol,{type:"interface",symbol:"SbRuleEntityProvision"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"entity-configuration-adapter",children:"Entity Configuration Adapter"}),"\n",(0,t.jsxs)(n.p,{children:["We've started with a simple provision definition: ",(0,t.jsx)(n.code,{children:"provision: 'verifyCreate'"}),".\nIn most cases, our entities will have the same setup, wouldn't it be great to have all of this set from one place and use\nthe simple definition?"]}),"\n",(0,t.jsx)(n.p,{children:"We can do this by providing an special adapter that the management client will use, when creating new entities."}),"\n",(0,t.jsx)(n.p,{children:"We register the adapter along with the management options we provide when registering a management client:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { Module } from '@nestjs/common';\nimport { ServiceBusModule, SbServerOptions, SbManagementDefaultsAdapter } from '@pebula/nesbus';\n\nconst defaults: SbManagementDefaultsAdapter = { /* ... */ };\n\nconst sbServerOptions: SbServerOptions[] = [\n  {\n    client: { /* Client configuration options... */ },\n    management: {\n      credentials: {\n        connectionString: 'MY-SAS-CONNECTION-STRING',\n      },\n      defaults, // Here we register the default configuration for entities.\n    },\n  },\n];\n\n@Module({\n  imports: [\n    ServiceBusModule.register({ servers: sbServerOptions }),\n  ],\n})\nexport class AppModule {}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The adapter contains an ",(0,t.jsx)(n.code,{children:"entities"})," property, with a definition for each type of entity:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"  entities?: {\n    queue?: SbQueue;\n    topic?: SbTopic;\n    subscription?: SbSubscription;\n  };\n"})}),"\n",(0,t.jsxs)(n.p,{children:["These values will go to the ",(0,t.jsx)(n.code,{children:"params"})," property in the provision definition."]}),"\n",(0,t.jsx)(n.p,{children:"In addition, an optional handler can be set to handle the creation of new rules when a new subscription is created."}),"\n",(0,t.jsxs)(n.p,{children:["For more information, read the API Docs for ",(0,t.jsx)(a.ol,{type:"interface",symbol:"SbManagementDefaultsAdapter"})]})]})}function x(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},6640:(e,n,i)=>{i.d(n,{ol:()=>a,vQ:()=>l,jd:()=>c});i(6540);var t=i(6025),r=i(4586),s=i(8774),o=i(4848);function a(e){var n=(0,r.A)(),i=e.symbol;return(0,o.jsx)(s.A,{to:(0,t.A)(""+n.siteConfig.customFields.apiDocPrefix+i.toLowerCase()),children:e.children||i})}function l(e){var n=(0,r.A)(),i=e.type,t=e.symbol,s=e.display,a=n.siteConfig.customFields.azureDocsUrl+"/"+function(e){switch(e){case"arm":return"arm-servicebus";case"schemaType":return"service-bus"}throw new Error("Unknown link segment type "+e)}(i)+"/"+t.toLowerCase();return(0,o.jsx)("a",{href:a,target:"_blank",children:e.children||s||t})}i(1765);function c(e){var n=e.to;return(0,o.jsx)(s.A,{to:(0,t.A)(n),children:e.children})}},9635:(e,n,i)=>{i.d(n,{A:()=>o});i(6540);var t=i(4164);const r={tabItem:"tabItem_Ymn6"};var s=i(4848);function o(e){var n=e.children,i=e.hidden,o=e.className;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(r.tabItem,o),hidden:i,children:n})}},1386:(e,n,i)=>{i.d(n,{A:()=>w});var t=i(6540),r=i(4164),s=i(3104),o=i(6347),a=i(205),l=i(7485),c=i(1682),u=i(9466);function d(e){var n,i;return null!=(n=null==(i=t.Children.toArray(e).filter((function(e){return"\n"!==e})).map((function(e){if(!e||(0,t.isValidElement)(e)&&((n=e.props)&&"object"==typeof n&&"value"in n))return e;var n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:i.filter(Boolean))?n:[]}function h(e){var n=e.values,i=e.children;return(0,t.useMemo)((function(){var e=null!=n?n:function(e){return d(e).map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes,default:n.default}}))}(i);return function(e){var n=(0,c.X)(e,(function(e,n){return e.value===n.value}));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,i])}function p(e){var n=e.value;return e.tabValues.some((function(e){return e.value===n}))}function x(e){var n=e.queryString,i=void 0!==n&&n,r=e.groupId,s=(0,o.W6)(),a=function(e){var n=e.queryString,i=void 0!==n&&n,t=e.groupId;if("string"==typeof i)return i;if(!1===i)return null;if(!0===i&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:i,groupId:r});return[(0,l.aZ)(a),(0,t.useCallback)((function(e){if(a){var n=new URLSearchParams(s.location.search);n.set(a,e),s.replace(Object.assign({},s.location,{search:n.toString()}))}}),[a,s])]}function v(e){var n,i,r,s,o=e.defaultValue,l=e.queryString,c=void 0!==l&&l,d=e.groupId,v=h(e),m=(0,t.useState)((function(){return function(e){var n,i=e.defaultValue,t=e.tabValues;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(i){if(!p({value:i,tabValues:t}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+i+'" but none of its children has the corresponding value. Available values are: '+t.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return i}var r=null!=(n=t.find((function(e){return e.default})))?n:t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:o,tabValues:v})})),f=m[0],g=m[1],b=x({queryString:c,groupId:d}),j=b[0],y=b[1],w=(n=function(e){return e?"docusaurus.tab."+e:null}({groupId:d}.groupId),i=(0,u.Dv)(n),r=i[0],s=i[1],[r,(0,t.useCallback)((function(e){n&&s.set(e)}),[n,s])]),S=w[0],C=w[1],T=function(){var e=null!=j?j:S;return p({value:e,tabValues:v})?e:null}();return(0,a.A)((function(){T&&g(T)}),[T]),{selectedValue:f,selectValue:(0,t.useCallback)((function(e){if(!p({value:e,tabValues:v}))throw new Error("Can't select invalid tab value="+e);g(e),y(e),C(e)}),[y,C,v]),tabValues:v}}var m=i(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=i(4848);function b(e){var n=e.className,i=e.block,t=e.selectedValue,o=e.selectValue,a=e.tabValues,l=[],c=(0,s.a_)().blockElementScrollPositionUntilNextRender,u=function(e){var n=e.currentTarget,i=l.indexOf(n),r=a[i].value;r!==t&&(c(n),o(r))},d=function(e){var n,i=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":var t,r=l.indexOf(e.currentTarget)+1;i=null!=(t=l[r])?t:l[0];break;case"ArrowLeft":var s,o=l.indexOf(e.currentTarget)-1;i=null!=(s=l[o])?s:l[l.length-1]}null==(n=i)||n.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":i},n),children:a.map((function(e){var n=e.value,i=e.label,s=e.attributes;return(0,g.jsx)("li",Object.assign({role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:function(e){return l.push(e)},onKeyDown:d,onClick:u},s,{className:(0,r.A)("tabs__item",f.tabItem,null==s?void 0:s.className,{"tabs__item--active":t===n}),children:null!=i?i:n}),n)}))})}function j(e){var n=e.lazy,i=e.children,r=e.selectedValue,s=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){var o=s.find((function(e){return e.props.value===r}));return o?(0,t.cloneElement)(o,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:s.map((function(e,n){return(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})}))})}function y(e){var n=v(e);return(0,g.jsxs)("div",{className:(0,r.A)("tabs-container",f.tabList),children:[(0,g.jsx)(b,Object.assign({},n,e)),(0,g.jsx)(j,Object.assign({},n,e))]})}function w(e){var n=(0,m.A)();return(0,g.jsx)(y,Object.assign({},e,{children:d(e.children)}),String(n))}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(6540);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);