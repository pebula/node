"use strict";(self.webpackChunkdocs_goosetyped=self.webpackChunkdocs_goosetyped||[]).push([[8365],{3606:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>d,toc:()=>l});var s=n(6870),r=n(5569),o=n(3634);const i={id:"query-methods",title:"Query Methods / Helpers",sidebar_label:"4. Query Methods / Helpers"},c="WIP",d={id:"advanced/query-methods",title:"Query Methods / Helpers",description:"Query methods (also called Query Helpers) is a simple but powerful",source:"@site/docs/advanced/query-methods.md",sourceDirName:"advanced",slug:"/advanced/query-methods",permalink:"/node/goosetyped/docs/advanced/query-methods",draft:!1,unlisted:!1,editUrl:"https://github.com/pebula/node/tree/main/apps/docs/goosetyped/docs/docs/advanced/query-methods.md",tags:[],version:"current",frontMatter:{id:"query-methods",title:"Query Methods / Helpers",sidebar_label:"4. Query Methods / Helpers"},sidebar:"sidebar",previous:{title:"3. Discriminators",permalink:"/node/goosetyped/docs/advanced/discriminators"},next:{title:"5. Local Columns",permalink:"/node/goosetyped/docs/advanced/local-column"}},a={},l=[];function u(e){const t={admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"wip",children:"WIP"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(o.pX,{type:"schema",hash:"query-helpers",children:"Query methods"})," (also called Query Helpers) is a simple but powerful\nmechanism to compose custom queries."]}),"\n",(0,s.jsxs)(t.p,{children:["All query methods are added to the mongoose ",(0,s.jsx)(t.code,{children:"Query"})," class and not the Model so they don't effect the type directly\nhowever the ",(0,s.jsx)(t.code,{children:"Query"})," type is used on the Model so there is an indirect effect which is why we register query methods\nis a different way."]}),"\n",(0,s.jsx)(t.p,{children:"Let's define some query methods:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"import { Document, DocumentQuery } from 'mongoose';\nimport { GtDocument, GtModel, GtColumn, GtQuery } from '@pebula/goosetyped';\n\nexport class MyQueries {\n  byName<T extends Document & { name: string }>(this: DocumentQuery<T[], T, MyQueries> & MyQueries, name: string): DocumentQuery<T[], T, MyQueries> & MyQueries {\n    return this.where({ name: new RegExp(name, 'i') });\n  }\n\n  byAge<T extends Document & { age: number }>(this: DocumentQuery<T[], T, MyQueries> & MyQueries, age: number): DocumentQuery<T[], T, MyQueries> & MyQueries {\n    return this.where({ age: age });\n  }\n}\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"@GtDocument()\nexport class Person extends GtQuery(MyQueries)(GtModel()) {\n  @GtColumn() name: string;\n\n  @GtColumn() age: number;\n}\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"Person.find().byName('test').byAge(15);\n"})}),"\n",(0,s.jsxs)(t.p,{children:["The declaration might look a bit cumbersome but it enables use to apply the additional query methods type members\non the ",(0,s.jsx)(t.code,{children:"Query"})," object returned by the Model's ",(0,s.jsx)(t.code,{children:"find()"})," method."]}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:["Note that you can still add mixins through ",(0,s.jsx)(t.code,{children:"GtModel()"})]})})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},3634:(e,t,n)=>{n.d(t,{ol:()=>d,z7:()=>p,jd:()=>h,pX:()=>y});var s=n(6326),r=n(5519),o=n(828),i=n(3252),c=n(6870);function d(e){const t=(0,o.A)(),{symbol:n}=e;return(0,c.jsx)(i.A,{to:(0,r.A)(`${t.siteConfig.customFields.apiDocPrefix}${n.toLowerCase()}`),children:e.children||n})}var a=n(1959),l=n(3129);const u={plain:{color:"#f8f8f2",backgroundColor:"#272822"},styles:[{types:["comment"],style:{color:"rgb(136, 132, 111)"}},{types:["string","changed"],style:{color:"rgb(230, 219, 116)"}},{types:["punctuation","tag","deleted"],style:{color:"rgb(249, 38, 114)"}},{types:["number","builtin"],style:{color:"rgb(174, 129, 255)"}},{types:["variable"],style:{color:"rgb(248, 248, 242)"}},{types:["function","attr-name","inserted"],style:{color:"rgb(166, 226, 46)"}}]},m={codeSnippet:"codeSnippet_FY5W"};function p(e){const t=(0,o.A)().siteConfig.themeConfig.prism||{},[n,r]=(0,s.useState)(!1);(0,s.useEffect)((()=>{r(!0)}),[]);const{isDarkTheme:i}=(0,a.G)(),d=t.theme||u,p=t.darkTheme||d,h=i?p:d,{lang:y="yaml",snippet:g}=e;return(0,c.jsx)(l.f4,{theme:h,code:g,language:y,children:e=>{let{className:t,style:n,tokens:s,getLineProps:r,getTokenProps:o}=e;return(0,c.jsx)("pre",{className:`${t} ${m.codeSnippet}`,style:n,children:s.map(((e,t)=>(0,c.jsx)("div",{...r({line:e,key:t}),children:e.map(((e,t)=>(0,c.jsx)("span",{...o({token:e,key:t})})))})))})}})}function h(e){const{to:t}=e;return(0,c.jsx)(i.A,{to:(0,r.A)(t),children:e.children})}function y(e){const t=(0,o.A)(),{type:n,hash:s,display:r}=e,i=`${t.siteConfig.customFields.mongooseDocsUrl}/${function(e){switch(e){case"schema":return"guide";case"schemaType":return"SchemaTypes";case"connection":return"Connections";case"model":return"Models";case"document":return"Documents";case"subDocument":return"subdocs";case"query":return"Queries";case"validation":return"Validation";case"middleware":return"Middleware";case"populate":return"Populate";case"discriminator":return"Discriminators";case"plugins":return"Plugins"}throw new Error(`Unknown link segment type ${e}`)}(n).toLowerCase()}.html${s?"#"+s:""}`;return(0,c.jsx)("a",{href:i,target:"_blank",children:e.children||r||s||""})}},5569:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var s=n(6326);const r={},o=s.createContext(r);function i(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);