name: Nx Distributed Tasks [PR]

on:
  push:
    branches:
      - main
  pull_request:

env:
  BUILD_ARTIFACTS: dist-artifacts
  DEPENDENCIES_CACHE: cache-node-modules
  NX_CACHE: cache-nx
  SERVICEBUS_CONNECTION_STRING: ${{ secrets.SERVICEBUS_CONNECTION_STRING }}

jobs:
  initialize:
    runs-on: ubuntu-latest
    outputs:
      base: ${{ steps.setSHAs.outputs.base  }}
      head: ${{ steps.setSHAs.outputs.head  }}
      matrix: ${{ steps.detectMatrix.outputs.matrix  }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: |
          echo "git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules origin ${GITHUB_SHA}:${GITHUB_REF}"
          git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules origin ${GITHUB_SHA}:${GITHUB_REF}
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache node modules
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ env.DEPENDENCIES_CACHE }}-${{ hashFiles('yarn.lock') }}
      - name: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo apt install libsdl-pango-dev
          yarn install --pure-lockfile
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: setSHAs
        uses: nrwl/nx-set-shas@v4
      - run: |
          echo "BASE: ${{ steps.setSHAs.outputs.base }}"
          echo "HEAD: ${{ steps.setSHAs.outputs.head }}"
      - name: Detect Execution Matrix
        uses: actions/github-script@v7
        id: detectMatrix
        with:
          script: |
            //                                                             TARGETS     JOBS  
            const output = require('./.github/detect-matrix.js')(['test', 'build'], 4);
            core.setOutput("matrix", JSON.stringify(output, null));

  distributed-task:
    runs-on: ubuntu-latest
    needs: [initialize]
    strategy:
      fail-fast: false
      matrix:
        instance: ${{ fromJSON(needs.initialize.outputs.matrix) }}
    env:
      count: 4
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ env.DEPENDENCIES_CACHE }}-${{ hashFiles('yarn.lock') }}
      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: node_modules/.cache/nx
          key: ${{ env.NX_CACHE }}-${{ hashFiles('yarn.lock') }}-${{ matrix.instance.target }}-${{ matrix.instance.index }}-${{ github.sha }}
          restore-keys: |
            ${{ env.NX_CACHE }}-${{ hashFiles('yarn.lock') }}-${{ matrix.instance.target }}-${{ matrix.instance.index }}-
            ${{ env.NX_CACHE }}-${{ hashFiles('yarn.lock') }}-
            ${{ env.NX_CACHE }}-
      - name: Compute Nx arguments
        if: matrix.instance.target == 'build'
        run: echo "NX_ARGUMENTS=--prod --with-deps" >> "$GITHUB_ENV"
      - name: Compute Nx arguments
        if: matrix.instance.target == 'test'
        run: echo 'NX_ARGUMENTS=--codeCoverage --coverageReporters=lcov' >> "$GITHUB_ENV"
      - name: Run ${{ matrix.instance.target }} with ${{ matrix.instance.projects }}
        run: |
          echo "npx nx run-many --target=${{ matrix.instance.target }} --projects=${{ matrix.instance.projects }} $NX_ARGUMENTS"
          npx nx run-many --target=${{ matrix.instance.target }} --projects=${{ matrix.instance.projects }} $NX_ARGUMENTS
      - name: Merge Coverage Reports
        if: matrix.instance.target == 'test'
        run: node ./.github/coverageMerger.js
      - name: Upload coverage to Coveralls
        if: matrix.instance.target == 'test'
        continue-on-error: true
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: run-${{ matrix.instance.index }}
          parallel: true
  finish:
    needs: distributed-task
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true
