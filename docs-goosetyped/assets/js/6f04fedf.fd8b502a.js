"use strict";(self.webpackChunknode=self.webpackChunknode||[]).push([[2674],{8688:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var t=o(4848),i=o(8453),c=o(6640);const s={id:"async-model-compilation",title:"Async Model Compilation",sidebar_label:"7. Async Model Compilation"},r=void 0,l={id:"advanced/async-model-compilation",title:"Async Model Compilation",description:"GooseTyped works in 2 modes:",source:"@site/docs/advanced/async-model-compilation.md",sourceDirName:"advanced",slug:"/advanced/async-model-compilation",permalink:"/node/docs-goosetyped/docs/advanced/async-model-compilation",draft:!1,unlisted:!1,editUrl:"https://github.com/pebula/node/tree/main/apps/docs/goosetyped/docs/docs/advanced/async-model-compilation.md",tags:[],version:"current",frontMatter:{id:"async-model-compilation",title:"Async Model Compilation",sidebar_label:"7. Async Model Compilation"},sidebar:"sidebar",previous:{title:"6. Plugins",permalink:"/node/docs-goosetyped/docs/advanced/plugins"},next:{title:"Utilities",permalink:"/node/docs-goosetyped/docs/utilities/"}},d={},a=[{value:"Sync VS Async",id:"sync-vs-async",level:2},{value:"Async Compilation",id:"async-compilation",level:2}];function h(e){const n={admonition:"admonition",br:"br",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"GooseTyped"})," works in 2 modes:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Immediate Model Compilation"}),"\n",(0,t.jsx)(n.li,{children:"Async Model Compilation"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"To simplify the configuration the mode in which each model is compiled is determined by connection it is attached to."}),"\n",(0,t.jsxs)(n.p,{children:["When the default connection is used the compilation is immediate.",(0,t.jsx)(n.br,{}),"\n","When a specific connection is used the compilation is async."]}),"\n",(0,t.jsx)(n.h2,{id:"sync-vs-async",children:"Sync VS Async"}),"\n",(0,t.jsx)(n.p,{children:"What does it means anyway?"}),"\n",(0,t.jsx)(n.p,{children:"Since decorators are not (yet) part of the JS spec, TypeScript converts them into simple functions that\ninvoke along with the creation of the class."}),"\n",(0,t.jsxs)(n.p,{children:["First, all of the member level decorators fire (i.e those on properties and methods) and at the end the class decorators\nfire (e.g. ",(0,t.jsx)(n.code,{children:"@GtDocument"}),")."]}),"\n",(0,t.jsxs)(n.p,{children:["Once ",(0,t.jsx)(n.code,{children:"@GtDocument"})," fires it will check if there is a ",(0,t.jsx)(n.code,{children:"connectionId"})," defined, if not it will compile the model before the module itself finish to initialize and export the model class."]}),"\n",(0,t.jsx)(n.p,{children:"This is a synchronous run which fits the default connection as it is also set immediately in mongoose."}),"\n",(0,t.jsx)(n.h2,{id:"async-compilation",children:"Async Compilation"}),"\n",(0,t.jsxs)(n.p,{children:["The same process occurs in an async compilation except that now ",(0,t.jsx)(n.code,{children:"@GtDocument"})," fires and detects that ",(0,t.jsx)(n.code,{children:"connectionId"})," is defined."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import mongoose from 'mongoose';\nimport { GtDocument, GtModel, GtColumn, addConnection } from '@pebula/goosetyped';\n\n@GtDocument({\n  connectionId: 'myConnection',\n})\nexport class Customer extends GtModel() {\n  @GtColumn()\n  name: string;\n\n  @GtColumn()\n  age: number;\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"At this point it will wait to see if the user has added this connection."}),"\n",(0,t.jsxs)(n.p,{children:['When no connection is found, nothing is done and the model will "wait" for the connection to be added.',(0,t.jsx)(n.br,{}),"\n","If the connection exists, the compilation will run at one of two options (user defined):"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"immediate"})," [default] - Compile the model once a reference to the connection is obtained."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"connected"})," - Compile the model once the connection state changes to ",(0,t.jsx)(n.code,{children:"connected"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"Do not use the model before it is compiled using a connection."})}),"\n",(0,t.jsx)(n.p,{children:"Now, let's register the connection so our model can compile:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const connection = mongoose.createConnection('localhost',{ /* ...*/ });\nconst ready = addConnection('myConnection', () => connection, { compileAt: 'immediate' });\nawait ready;\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Once ",(0,t.jsx)(n.code,{children:"ready"})," ",(0,t.jsx)(n.strong,{children:"resolves"})," we have a guarantee that all models are compiled and bound to the connection."]}),"\n",(0,t.jsxs)(n.p,{children:["The factory function (",(0,t.jsx)(n.code,{children:"() => connection"}),") return the connection or it can return a ",(0,t.jsx)(n.code,{children:"Promise"})," for the connection.",(0,t.jsx)(n.br,{}),"\n","Once the factory function resolves (including promise, if returned) then the models compile and the process ends."]}),"\n",(0,t.jsxs)(n.p,{children:["If we set ",(0,t.jsx)(n.code,{children:"compileAt"})," to ",(0,t.jsx)(n.strong,{children:"connected"})," the model will wait for the connection state to change to ",(0,t.jsx)(n.strong,{children:"connected"})," and only then\nall models will compile and the process will end."]}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["It is best to compile as early as possible, think before you use ",(0,t.jsx)(n.strong,{children:"connected"})]})}),"\n",(0,t.jsxs)(n.p,{children:["Watch out from the Promise Like connection object returned from ",(0,t.jsx)(n.code,{children:"mongoose.createConnection"}),", when returned from the factory\nfunction like done above it will actually treat it as a promise and will resolve the factory once the connection is connected."]}),"\n",(0,t.jsx)(n.p,{children:"Fix:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const connection = await mongoose.createConnection('localhost',{ /* ...*/ });\nconst ready = addConnection('myConnection', () => connection, { compileAt: 'immediate' });\nawait ready;\n"})}),"\n",(0,t.jsx)(c.ol,{type:"interface",symbol:"GtConnectOptions"})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},6640:(e,n,o)=>{o.d(n,{ol:()=>l,z7:()=>p,jd:()=>u,pX:()=>y});var t=o(6540),i=o(6025),c=o(4586),s=o(8774),r=o(4848);function l(e){var n=(0,c.A)(),o=e.symbol;return(0,r.jsx)(s.A,{to:(0,i.A)(""+n.siteConfig.customFields.apiDocPrefix+o.toLowerCase()),children:e.children||o})}var d=o(5293),a=o(1765);const h={plain:{color:"#f8f8f2",backgroundColor:"#272822"},styles:[{types:["comment"],style:{color:"rgb(136, 132, 111)"}},{types:["string","changed"],style:{color:"rgb(230, 219, 116)"}},{types:["punctuation","tag","deleted"],style:{color:"rgb(249, 38, 114)"}},{types:["number","builtin"],style:{color:"rgb(174, 129, 255)"}},{types:["variable"],style:{color:"rgb(248, 248, 242)"}},{types:["function","attr-name","inserted"],style:{color:"rgb(166, 226, 46)"}}]},m={codeSnippet:"codeSnippet_KFiO"};function p(e){var n=(0,c.A)().siteConfig.themeConfig.prism||{},o=(0,t.useState)(!1),i=(o[0],o[1]);(0,t.useEffect)((function(){i(!0)}),[]);var s=(0,d.G)().isDarkTheme,l=n.theme||h,p=n.darkTheme||l,u=s?p:l,y=e.lang,f=void 0===y?"yaml":y,x=e.snippet;return(0,r.jsx)(a.f4,{theme:u,code:x,language:f,children:function(e){var n=e.className,o=e.style,t=e.tokens,i=e.getLineProps,c=e.getTokenProps;return(0,r.jsx)("pre",{className:n+" "+m.codeSnippet,style:o,children:t.map((function(e,n){return(0,r.jsx)("div",Object.assign({},i({line:e,key:n}),{children:e.map((function(e,n){return(0,r.jsx)("span",Object.assign({},c({token:e,key:n})))}))}))}))})}})}function u(e){var n=e.to;return(0,r.jsx)(s.A,{to:(0,i.A)(n),children:e.children})}function y(e){var n=(0,c.A)(),o=e.type,t=e.hash,i=e.display,s=n.siteConfig.customFields.mongooseDocsUrl+"/"+function(e){switch(e){case"schema":return"guide";case"schemaType":return"SchemaTypes";case"connection":return"Connections";case"model":return"Models";case"document":return"Documents";case"subDocument":return"subdocs";case"query":return"Queries";case"validation":return"Validation";case"middleware":return"Middleware";case"populate":return"Populate";case"discriminator":return"Discriminators";case"plugins":return"Plugins"}throw new Error("Unknown link segment type "+e)}(o).toLowerCase()+".html"+(t?"#"+t:"");return(0,r.jsx)("a",{href:s,target:"_blank",children:e.children||i||t||""})}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>r});var t=o(6540);const i={},c=t.createContext(i);function s(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);